name: Publish Library

on:
  workflow_dispatch:
    inputs:
      monorepo_version:
        description: 'New Monorepo Version (ex. 3.0.0-alpha) (leave empty to "patch")'
        required: false

jobs:
  update_version:
    name: Update synthetix in contracts-interface
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: resolve version
        run: |
          export theversion="patch"
          if [ -n "${{ github.event.inputs.monorepo_version }}" ]; then export theversion="${{ github.event.inputs.monorepo_version }}"; fi
          echo "Resolved version $theversion"
          echo "new_version=$theversion" >> $GITHUB_ENV
      - name: config git identity
        run: git config --global user.email "ci@cc.snxdao.io" && git config --global user.name "Synthetix CI"
      - name: Lints and build
        run: |
          npm i -g yarn
          yarn install
          yarn run lint:fix
          yarn run test
          yarn run build
      - name: Update packages version
        run: |
          npm -w contracts-interface version ${{ env.new_version }}
          npm -w optimism-networks version ${{ env.new_version }}
          npm -w providers version ${{ env.new_version }}
          npm -w queries version ${{ env.new_version }}
          npm -w transaction-notifier version ${{ env.new_version }}
          npm -w wei version ${{ env.new_version }}

      - run: npm -w contracts-interface publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm -w optimism-networks publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm -w providers publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm -w queries publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm -w transaction-notifier publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm -w wei publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push changes
        run: git push
      - name: Notify dApps
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN_DAPPS }}" --request POST --data "{\"ref\": \"dev\", \"inputs\": {\"monorepo_version\": \"${{ env.resolved_version }}\"}}" https://api.github.com/repos/Synthetixio/staking/actions/workflows/updateDependency.yml/dispatches
          curl -H "Authorization: token ${{ secrets.GH_TOKEN_DAPPS }}" --request POST --data "{\"ref\": \"develop\", \"inputs\": {\"monorepo_version\": \"${{ env.resolved_version }}\"}}" https://api.github.com/repos/Synthetixio/futures-keepers/actions/workflows/updateDependency.yml/dispatches
          curl -H "Authorization: token ${{ secrets.GH_TOKEN_DAPPS }}" --request POST --data "{\"event_type\": \"update-dependency\", \"client_payload\": {\"version\": \"${{ env.resolved_version }}\"}}" https://api.github.com/repos/Kwenta/kwenta/dispatches
          curl -H "Authorization: token ${{ secrets.GH_TOKEN_DAPPS }}" --request POST --data "{\"event_type\": \"update-dependency\", \"client_payload\": {\"version\": \"${{ env.resolved_version }}\"}}" https://api.github.com/repos/Kwenta/kwenta-api/dispatches
