// !!! DO NOT EDIT !!! Automatically generated file

export const name = 'Synthetix';
export const address = '0x8700dAec35aF8Ff88c16BdF0418774CB3D7599B4';
export const source = 'MintableSynthetix';
export const abi = [
  'constructor(address _proxy, address _tokenState, address _owner, uint256 _totalSupply, address _resolver)',
  'event AccountLiquidated(address indexed account, uint256 snxRedeemed, uint256 amountLiquidated, address liquidator)',
  'event Approval(address indexed owner, address indexed spender, uint256 value)',
  'event CacheUpdated(bytes32 name, address destination)',
  'event ExchangeRebate(address indexed account, bytes32 currencyKey, uint256 amount)',
  'event ExchangeReclaim(address indexed account, bytes32 currencyKey, uint256 amount)',
  'event ExchangeTracking(bytes32 indexed trackingCode, bytes32 toCurrencyKey, uint256 toAmount, uint256 fee)',
  'event OwnerChanged(address oldOwner, address newOwner)',
  'event OwnerNominated(address newOwner)',
  'event ProxyUpdated(address proxyAddress)',
  'event SynthExchange(address indexed account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)',
  'event TokenStateUpdated(address newTokenState)',
  'event Transfer(address indexed from, address indexed to, uint256 value)',
  'function DECIMALS() view returns (uint8)',
  'function TOKEN_NAME() view returns (string)',
  'function TOKEN_SYMBOL() view returns (string)',
  'function acceptOwnership()',
  'function allowance(address owner, address spender) view returns (uint256)',
  'function anySynthOrSNXRateIsInvalid() view returns (bool anyRateInvalid)',
  'function approve(address spender, uint256 value) returns (bool)',
  'function availableCurrencyKeys() view returns (bytes32[])',
  'function availableSynthCount() view returns (uint256)',
  'function availableSynths(uint256 index) view returns (address)',
  'function balanceOf(address account) view returns (uint256)',
  'function burnSecondary(address account, uint256 amount)',
  'function burnSynths(uint256 amount)',
  'function burnSynthsOnBehalf(address burnForAddress, uint256 amount)',
  'function burnSynthsToTarget()',
  'function burnSynthsToTargetOnBehalf(address burnForAddress)',
  'function collateral(address account) view returns (uint256)',
  'function collateralisationRatio(address _issuer) view returns (uint256)',
  'function debtBalanceOf(address account, bytes32 currencyKey) view returns (uint256)',
  'function decimals() view returns (uint8)',
  'function emitExchangeRebate(address account, bytes32 currencyKey, uint256 amount)',
  'function emitExchangeReclaim(address account, bytes32 currencyKey, uint256 amount)',
  'function emitExchangeTracking(bytes32 trackingCode, bytes32 toCurrencyKey, uint256 toAmount, uint256 fee)',
  'function emitSynthExchange(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)',
  'function exchange(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey) returns (uint256 amountReceived)',
  'function exchangeAtomically(bytes32, uint256, bytes32, bytes32, uint256) returns (uint256)',
  'function exchangeOnBehalf(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey) returns (uint256 amountReceived)',
  'function exchangeOnBehalfWithTracking(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address rewardAddress, bytes32 trackingCode) returns (uint256 amountReceived)',
  'function exchangeWithTracking(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address rewardAddress, bytes32 trackingCode) returns (uint256 amountReceived)',
  'function exchangeWithTrackingForInitiator(bytes32, uint256, bytes32, address, bytes32) returns (uint256)',
  'function exchangeWithVirtual(bytes32, uint256, bytes32, bytes32) returns (uint256, address)',
  'function initializeLiquidatorRewardsRestitution(uint256 amount)',
  'function isResolverCached() view returns (bool)',
  'function isWaitingPeriod(bytes32 currencyKey) view returns (bool)',
  'function issueMaxSynths()',
  'function issueMaxSynthsOnBehalf(address issueForAddress)',
  'function issueSynths(uint256 amount)',
  'function issueSynthsOnBehalf(address issueForAddress, uint256 amount)',
  'function liquidateDelinquentAccount(address account) returns (bool)',
  'function liquidateSelf() returns (bool)',
  'function maxIssuableSynths(address account) view returns (uint256 maxIssuable)',
  'function messageSender() view returns (address)',
  'function mint() returns (bool)',
  'function mintSecondary(address account, uint256 amount)',
  'function mintSecondaryRewards(uint256 amount)',
  'function name() view returns (string)',
  'function nominateNewOwner(address _owner)',
  'function nominatedOwner() view returns (address)',
  'function owner() view returns (address)',
  'function proxy() view returns (address)',
  'function rebuildCache()',
  'function remainingIssuableSynths(address account) view returns (uint256 maxIssuable, uint256 alreadyIssued, uint256 totalSystemDebt)',
  'function resolver() view returns (address)',
  'function resolverAddressesRequired() view returns (bytes32[] addresses)',
  'function restituted() view returns (bool)',
  'function sUSD() view returns (bytes32)',
  'function setMessageSender(address sender)',
  'function setProxy(address _proxy)',
  'function setTokenState(address _tokenState)',
  'function settle(bytes32 currencyKey) returns (uint256 reclaimed, uint256 refunded, uint256 numEntriesSettled)',
  'function symbol() view returns (string)',
  'function synths(bytes32 currencyKey) view returns (address)',
  'function synthsByAddress(address synthAddress) view returns (bytes32)',
  'function tokenState() view returns (address)',
  'function totalIssuedSynths(bytes32 currencyKey) view returns (uint256)',
  'function totalIssuedSynthsExcludeOtherCollateral(bytes32 currencyKey) view returns (uint256)',
  'function totalSupply() view returns (uint256)',
  'function transfer(address to, uint256 value) returns (bool)',
  'function transferFrom(address from, address to, uint256 value) returns (bool)',
  'function transferableSynthetix(address account) view returns (uint256 transferable)',
];
