import { gql } from 'graphql-request';
import { SnxHolderParams } from '../../src/types';
import { createGQLWhereString, createGQLBlockNumberString } from '../../src/utils';

export const createSnxHolderQuery = (params?: SnxHolderParams): string => {
	const whereString = createGQLWhereString(
		Object.entries({
			id: (params?.address ?? null) != null ? 'address' : null,
			collateral_gte: (params?.minCollateral ?? null) != null ? 'minCollateral' : null,
			collateral_lte: (params?.maxCollateral ?? null) != null ? 'maxCollateral' : null,
			mints_gte: (params?.minMints ?? null) != null ? 'minMints' : null,
			claims_gte: (params?.minClaims ?? null) != null ? 'minClaims' : null,
			collateral_lt:
				(params?.autoGeneratedPaginationField ?? null) != null
					? 'autoGeneratedPaginationField'
					: null,
		})
	);

	return gql`
		query snxholders($autoGeneratedPaginationField: Int, $max: Int, $minCollateral: Int, $minClaims: Int, $minMints: Int, $maxCollateral: Int, $address: String) {
			snxholders(
				first: $max${createGQLBlockNumberString(params?.blockNumber ?? null)}
				where: ${whereString}
				orderBy: collateral
				orderDirection: desc
			) {
				id
        collateral
        block
        timestamp
        balanceOf
        transferable
        initialDebtOwnership
        debtEntryAtIndex
        mints
        claims
			}
		}
	`;
};
