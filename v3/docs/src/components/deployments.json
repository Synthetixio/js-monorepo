{
  "deploys": {
    "5": {
      "main": {
        "def": {
          "name": "synthetix",
          "version": "3.0.0-alpha.5",
          "description": "Core synthetix system",
          "setting": {
            "salt": {
              "description": "Change this to a unique string when deploying multiple instances of the system. Note that only the proxy contract will be unique.",
              "defaultValue": "main"
            },
            "owner": {
              "description": "Admin user for the system",
              "defaultValue": "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
            },
            "oracle_manager_source": {
              "defaultValue": "oracle-manager:1.0.1"
            }
          },
          "import": {
            "oracle_manager": {
              "source": "<%= settings.oracle_manager_source %>",
              "options": {
                "owner": "<%= settings.owner %>"
              }
            }
          },
          "contract": {
            "InitialModuleBundle": {
              "artifact": "contracts/modules/InitialModuleBundle.sol:InitialModuleBundle"
            },
            "FeatureFlagModule": {
              "artifact": "contracts/modules/core/FeatureFlagModule.sol:FeatureFlagModule"
            },
            "AccountModule": {
              "artifact": "contracts/modules/core/AccountModule.sol:AccountModule"
            },
            "AssociateDebtModule": {
              "artifact": "contracts/modules/core/AssociateDebtModule.sol:AssociateDebtModule"
            },
            "AssociatedSystemsModule": {
              "artifact": "contracts/modules/associated-systems/AssociatedSystemsModule.sol:AssociatedSystemsModule"
            },
            "CollateralModule": {
              "artifact": "contracts/modules/core/CollateralModule.sol:CollateralModule"
            },
            "CollateralConfigurationModule": {
              "artifact": "contracts/modules/core/CollateralConfigurationModule.sol:CollateralConfigurationModule"
            },
            "IssueUSDModule": {
              "artifact": "contracts/modules/core/IssueUSDModule.sol:IssueUSDModule"
            },
            "LiquidationModule": {
              "artifact": "contracts/modules/core/LiquidationModule.sol:LiquidationModule"
            },
            "MarketCollateralModule": {
              "artifact": "contracts/modules/core/MarketCollateralModule.sol:MarketCollateralModule"
            },
            "MarketManagerModule": {
              "artifact": "contracts/modules/core/MarketManagerModule.sol:MarketManagerModule"
            },
            "MulticallModule": {
              "artifact": "contracts/modules/core/MulticallModule.sol:MulticallModule"
            },
            "PoolConfigurationModule": {
              "artifact": "contracts/modules/core/PoolConfigurationModule.sol:PoolConfigurationModule"
            },
            "PoolModule": {
              "artifact": "contracts/modules/core/PoolModule.sol:PoolModule"
            },
            "RewardsManagerModule": {
              "artifact": "contracts/modules/core/RewardsManagerModule.sol:RewardsManagerModule"
            },
            "UtilsModule": {
              "artifact": "contracts/modules/core/UtilsModule.sol:UtilsModule"
            },
            "VaultModule": {
              "artifact": "contracts/modules/core/VaultModule.sol:VaultModule"
            },
            "AccountTokenModule": {
              "artifact": "contracts/modules/account/AccountTokenModule.sol:AccountTokenModule"
            },
            "USDTokenModule": {
              "artifact": "contracts/modules/usd/USDTokenModule.sol:USDTokenModule"
            },
            "CoreRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
              "abiOf": [
                "InitialModuleBundle",
                "FeatureFlagModule",
                "AccountModule",
                "AssociateDebtModule",
                "AssociatedSystemsModule",
                "CollateralModule",
                "CollateralConfigurationModule",
                "IssueUSDModule",
                "LiquidationModule",
                "MarketCollateralModule",
                "MarketManagerModule",
                "MulticallModule",
                "PoolConfigurationModule",
                "PoolModule",
                "RewardsManagerModule",
                "UtilsModule",
                "VaultModule"
              ],
              "depends": ["run.core_generate_router"]
            },
            "InitialCoreProxy": {
              "artifact": "contracts/Proxy.sol:Proxy",
              "args": ["<%= contracts.InitialModuleBundle.address %>"],
              "abiOf": ["InitialModuleBundle"],
              "depends": ["contract.InitialModuleBundle"]
            },
            "AccountRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
              "abiOf": ["InitialModuleBundle", "AccountTokenModule"],
              "depends": ["run.account_generate_router"]
            },
            "USDRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
              "abiOf": ["InitialModuleBundle", "AssociatedSystemsModule", "USDTokenModule"],
              "depends": ["run.usd_generate_router"]
            }
          },
          "run": {
            "core_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    FeatureFlagModule: contracts.FeatureFlagModule,\n    AccountModule: contracts.AccountModule,\n    AssociateDebtModule: contracts.AssociateDebtModule,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    CollateralModule: contracts.CollateralModule,\n    CollateralConfigurationModule: contracts.CollateralConfigurationModule,\n    IssueUSDModule: contracts.IssueUSDModule,\n    LiquidationModule: contracts.LiquidationModule,\n    MarketCollateralModule: contracts.MarketCollateralModule,\n    MarketManagerModule: contracts.MarketManagerModule,\n    MulticallModule: contracts.MulticallModule,\n    PoolConfigurationModule: contracts.PoolConfigurationModule,\n    PoolModule: contracts.PoolModule,\n    RewardsManagerModule: contracts.RewardsManagerModule,\n    UtilsModule: contracts.UtilsModule,\n    VaultModule: contracts.VaultModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/core"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.FeatureFlagModule",
                "contract.AccountModule",
                "contract.AssociateDebtModule",
                "contract.AssociatedSystemsModule",
                "contract.CollateralModule",
                "contract.CollateralConfigurationModule",
                "contract.IssueUSDModule",
                "contract.LiquidationModule",
                "contract.MarketCollateralModule",
                "contract.MarketManagerModule",
                "contract.MulticallModule",
                "contract.PoolConfigurationModule",
                "contract.PoolModule",
                "contract.RewardsManagerModule",
                "contract.UtilsModule",
                "contract.VaultModule"
              ]
            },
            "account_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AccountTokenModule: contracts.AccountTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/common", "contracts/modules/account"],
              "depends": ["contract.InitialModuleBundle", "contract.AccountTokenModule"]
            },
            "usd_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    USDTokenModule: contracts.USDTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/associated-systems", "contracts/modules/usd"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.AssociatedSystemsModule",
                "contract.USDTokenModule"
              ]
            }
          },
          "invoke": {
            "acquire_ownership": {
              "target": ["InitialCoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initializeOwnerModule",
              "args": ["<%= settings.owner %>"],
              "depends": ["contract.InitialCoreProxy"]
            },
            "upgrade_core_proxy": {
              "target": ["InitialCoreProxy"],
              "abi": "UpgradeModule",
              "from": "<%= settings.owner %>",
              "func": "upgradeTo",
              "args": ["<%= contracts.CoreRouter.address %>"],
              "factory": {
                "CoreProxy": {
                  "abiOf": ["CoreRouter"],
                  "event": "Upgraded",
                  "arg": 0
                }
              },
              "depends": ["invoke.acquire_ownership", "contract.CoreRouter"]
            },
            "init_account": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeNft",
              "args": [
                "0x6163636f756e744e667400000000000000000000000000000000000000000000",
                "Synthetix Account",
                "SACCT",
                "https://synthetix.io",
                "<%= contracts.AccountRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.AccountRouter"],
              "factory": {
                "AccountProxy": {
                  "abiOf": ["AccountRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "init_usd": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeToken",
              "args": [
                "0x555344546f6b656e000000000000000000000000000000000000000000000000",
                "Synthetic USD Token v3",
                "snxUSD",
                18,
                "<%= contracts.USDRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.USDRouter"],
              "factory": {
                "USDProxy": {
                  "abiOf": ["USDRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "set_oracle_manager": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "configureOracleManager",
              "args": ["<%= imports.oracle_manager.contracts.Proxy.address %>"],
              "depends": ["invoke.upgrade_core_proxy", "import.oracle_manager"]
            }
          }
        },
        "options": {
          "owner": "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"
        },
        "buildVersion": 3,
        "ipfsHash": "Qmb9vno3qYrfEwVXwTyizejqv9z1jYVkNH1BY5twdXqBJ4",
        "heads": ["invoke.init_account", "invoke.init_usd", "invoke.set_oracle_manager"]
      }
    },
    "420": {
      "main": {
        "def": {
          "name": "synthetix",
          "version": "3.0.0-alpha.5",
          "description": "Core synthetix system",
          "setting": {
            "salt": {
              "description": "Change this to a unique string when deploying multiple instances of the system. Note that only the proxy contract will be unique.",
              "defaultValue": "main"
            },
            "owner": {
              "description": "Admin user for the system",
              "defaultValue": "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
            },
            "oracle_manager_source": {
              "defaultValue": "oracle-manager:1.0.1"
            }
          },
          "import": {
            "oracle_manager": {
              "source": "<%= settings.oracle_manager_source %>",
              "options": {
                "owner": "<%= settings.owner %>"
              }
            }
          },
          "contract": {
            "InitialModuleBundle": {
              "artifact": "contracts/modules/InitialModuleBundle.sol:InitialModuleBundle"
            },
            "FeatureFlagModule": {
              "artifact": "contracts/modules/core/FeatureFlagModule.sol:FeatureFlagModule"
            },
            "AccountModule": {
              "artifact": "contracts/modules/core/AccountModule.sol:AccountModule"
            },
            "AssociateDebtModule": {
              "artifact": "contracts/modules/core/AssociateDebtModule.sol:AssociateDebtModule"
            },
            "AssociatedSystemsModule": {
              "artifact": "contracts/modules/associated-systems/AssociatedSystemsModule.sol:AssociatedSystemsModule"
            },
            "CollateralModule": {
              "artifact": "contracts/modules/core/CollateralModule.sol:CollateralModule"
            },
            "CollateralConfigurationModule": {
              "artifact": "contracts/modules/core/CollateralConfigurationModule.sol:CollateralConfigurationModule"
            },
            "IssueUSDModule": {
              "artifact": "contracts/modules/core/IssueUSDModule.sol:IssueUSDModule"
            },
            "LiquidationModule": {
              "artifact": "contracts/modules/core/LiquidationModule.sol:LiquidationModule"
            },
            "MarketCollateralModule": {
              "artifact": "contracts/modules/core/MarketCollateralModule.sol:MarketCollateralModule"
            },
            "MarketManagerModule": {
              "artifact": "contracts/modules/core/MarketManagerModule.sol:MarketManagerModule"
            },
            "MulticallModule": {
              "artifact": "contracts/modules/core/MulticallModule.sol:MulticallModule"
            },
            "PoolConfigurationModule": {
              "artifact": "contracts/modules/core/PoolConfigurationModule.sol:PoolConfigurationModule"
            },
            "PoolModule": {
              "artifact": "contracts/modules/core/PoolModule.sol:PoolModule"
            },
            "RewardsManagerModule": {
              "artifact": "contracts/modules/core/RewardsManagerModule.sol:RewardsManagerModule"
            },
            "UtilsModule": {
              "artifact": "contracts/modules/core/UtilsModule.sol:UtilsModule"
            },
            "VaultModule": {
              "artifact": "contracts/modules/core/VaultModule.sol:VaultModule"
            },
            "AccountTokenModule": {
              "artifact": "contracts/modules/account/AccountTokenModule.sol:AccountTokenModule"
            },
            "USDTokenModule": {
              "artifact": "contracts/modules/usd/USDTokenModule.sol:USDTokenModule"
            },
            "CoreRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
              "abiOf": [
                "InitialModuleBundle",
                "FeatureFlagModule",
                "AccountModule",
                "AssociateDebtModule",
                "AssociatedSystemsModule",
                "CollateralModule",
                "CollateralConfigurationModule",
                "IssueUSDModule",
                "LiquidationModule",
                "MarketCollateralModule",
                "MarketManagerModule",
                "MulticallModule",
                "PoolConfigurationModule",
                "PoolModule",
                "RewardsManagerModule",
                "UtilsModule",
                "VaultModule"
              ],
              "depends": ["run.core_generate_router"]
            },
            "InitialCoreProxy": {
              "artifact": "contracts/Proxy.sol:Proxy",
              "args": ["<%= contracts.InitialModuleBundle.address %>"],
              "abiOf": ["InitialModuleBundle"],
              "depends": ["contract.InitialModuleBundle"]
            },
            "AccountRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
              "abiOf": ["InitialModuleBundle", "AccountTokenModule"],
              "depends": ["run.account_generate_router"]
            },
            "USDRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
              "abiOf": ["InitialModuleBundle", "AssociatedSystemsModule", "USDTokenModule"],
              "depends": ["run.usd_generate_router"]
            }
          },
          "run": {
            "core_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    FeatureFlagModule: contracts.FeatureFlagModule,\n    AccountModule: contracts.AccountModule,\n    AssociateDebtModule: contracts.AssociateDebtModule,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    CollateralModule: contracts.CollateralModule,\n    CollateralConfigurationModule: contracts.CollateralConfigurationModule,\n    IssueUSDModule: contracts.IssueUSDModule,\n    LiquidationModule: contracts.LiquidationModule,\n    MarketCollateralModule: contracts.MarketCollateralModule,\n    MarketManagerModule: contracts.MarketManagerModule,\n    MulticallModule: contracts.MulticallModule,\n    PoolConfigurationModule: contracts.PoolConfigurationModule,\n    PoolModule: contracts.PoolModule,\n    RewardsManagerModule: contracts.RewardsManagerModule,\n    UtilsModule: contracts.UtilsModule,\n    VaultModule: contracts.VaultModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/core"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.FeatureFlagModule",
                "contract.AccountModule",
                "contract.AssociateDebtModule",
                "contract.AssociatedSystemsModule",
                "contract.CollateralModule",
                "contract.CollateralConfigurationModule",
                "contract.IssueUSDModule",
                "contract.LiquidationModule",
                "contract.MarketCollateralModule",
                "contract.MarketManagerModule",
                "contract.MulticallModule",
                "contract.PoolConfigurationModule",
                "contract.PoolModule",
                "contract.RewardsManagerModule",
                "contract.UtilsModule",
                "contract.VaultModule"
              ]
            },
            "account_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AccountTokenModule: contracts.AccountTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/common", "contracts/modules/account"],
              "depends": ["contract.InitialModuleBundle", "contract.AccountTokenModule"]
            },
            "usd_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    USDTokenModule: contracts.USDTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/associated-systems", "contracts/modules/usd"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.AssociatedSystemsModule",
                "contract.USDTokenModule"
              ]
            }
          },
          "invoke": {
            "acquire_ownership": {
              "target": ["InitialCoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initializeOwnerModule",
              "args": ["<%= settings.owner %>"],
              "depends": ["contract.InitialCoreProxy"]
            },
            "upgrade_core_proxy": {
              "target": ["InitialCoreProxy"],
              "abi": "UpgradeModule",
              "from": "<%= settings.owner %>",
              "func": "upgradeTo",
              "args": ["<%= contracts.CoreRouter.address %>"],
              "factory": {
                "CoreProxy": {
                  "abiOf": ["CoreRouter"],
                  "event": "Upgraded",
                  "arg": 0
                }
              },
              "depends": ["invoke.acquire_ownership", "contract.CoreRouter"]
            },
            "init_account": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeNft",
              "args": [
                "0x6163636f756e744e667400000000000000000000000000000000000000000000",
                "Synthetix Account",
                "SACCT",
                "https://synthetix.io",
                "<%= contracts.AccountRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.AccountRouter"],
              "factory": {
                "AccountProxy": {
                  "abiOf": ["AccountRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "init_usd": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeToken",
              "args": [
                "0x555344546f6b656e000000000000000000000000000000000000000000000000",
                "Synthetic USD Token v3",
                "snxUSD",
                18,
                "<%= contracts.USDRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.USDRouter"],
              "factory": {
                "USDProxy": {
                  "abiOf": ["USDRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "set_oracle_manager": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "configureOracleManager",
              "args": ["<%= imports.oracle_manager.contracts.Proxy.address %>"],
              "depends": ["invoke.upgrade_core_proxy", "import.oracle_manager"]
            }
          }
        },
        "options": {
          "owner": "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"
        },
        "buildVersion": 3,
        "ipfsHash": "QmcuNxbmPWDVEPtXTgVhhqjBkHYfXDVrF1EEwVHKYC3fAi",
        "heads": ["invoke.init_account", "invoke.init_usd", "invoke.set_oracle_manager"]
      }
    },
    "13370": {
      "main": {
        "def": {
          "name": "synthetix",
          "version": "3.0.0-alpha.5",
          "description": "Core synthetix system",
          "setting": {
            "salt": {
              "description": "Change this to a unique string when deploying multiple instances of the system. Note that only the proxy contract will be unique.",
              "defaultValue": "main"
            },
            "owner": {
              "description": "Admin user for the system",
              "defaultValue": "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
            },
            "oracle_manager_source": {
              "defaultValue": "oracle-manager:1.0.1"
            }
          },
          "import": {
            "oracle_manager": {
              "source": "<%= settings.oracle_manager_source %>",
              "options": {
                "owner": "<%= settings.owner %>"
              }
            }
          },
          "contract": {
            "InitialModuleBundle": {
              "artifact": "contracts/modules/InitialModuleBundle.sol:InitialModuleBundle"
            },
            "FeatureFlagModule": {
              "artifact": "contracts/modules/core/FeatureFlagModule.sol:FeatureFlagModule"
            },
            "AccountModule": {
              "artifact": "contracts/modules/core/AccountModule.sol:AccountModule"
            },
            "AssociateDebtModule": {
              "artifact": "contracts/modules/core/AssociateDebtModule.sol:AssociateDebtModule"
            },
            "AssociatedSystemsModule": {
              "artifact": "contracts/modules/associated-systems/AssociatedSystemsModule.sol:AssociatedSystemsModule"
            },
            "CollateralModule": {
              "artifact": "contracts/modules/core/CollateralModule.sol:CollateralModule"
            },
            "CollateralConfigurationModule": {
              "artifact": "contracts/modules/core/CollateralConfigurationModule.sol:CollateralConfigurationModule"
            },
            "IssueUSDModule": {
              "artifact": "contracts/modules/core/IssueUSDModule.sol:IssueUSDModule"
            },
            "LiquidationModule": {
              "artifact": "contracts/modules/core/LiquidationModule.sol:LiquidationModule"
            },
            "MarketCollateralModule": {
              "artifact": "contracts/modules/core/MarketCollateralModule.sol:MarketCollateralModule"
            },
            "MarketManagerModule": {
              "artifact": "contracts/modules/core/MarketManagerModule.sol:MarketManagerModule"
            },
            "MulticallModule": {
              "artifact": "contracts/modules/core/MulticallModule.sol:MulticallModule"
            },
            "PoolConfigurationModule": {
              "artifact": "contracts/modules/core/PoolConfigurationModule.sol:PoolConfigurationModule"
            },
            "PoolModule": {
              "artifact": "contracts/modules/core/PoolModule.sol:PoolModule"
            },
            "RewardsManagerModule": {
              "artifact": "contracts/modules/core/RewardsManagerModule.sol:RewardsManagerModule"
            },
            "UtilsModule": {
              "artifact": "contracts/modules/core/UtilsModule.sol:UtilsModule"
            },
            "VaultModule": {
              "artifact": "contracts/modules/core/VaultModule.sol:VaultModule"
            },
            "AccountTokenModule": {
              "artifact": "contracts/modules/account/AccountTokenModule.sol:AccountTokenModule"
            },
            "USDTokenModule": {
              "artifact": "contracts/modules/usd/USDTokenModule.sol:USDTokenModule"
            },
            "CoreRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
              "abiOf": [
                "InitialModuleBundle",
                "FeatureFlagModule",
                "AccountModule",
                "AssociateDebtModule",
                "AssociatedSystemsModule",
                "CollateralModule",
                "CollateralConfigurationModule",
                "IssueUSDModule",
                "LiquidationModule",
                "MarketCollateralModule",
                "MarketManagerModule",
                "MulticallModule",
                "PoolConfigurationModule",
                "PoolModule",
                "RewardsManagerModule",
                "UtilsModule",
                "VaultModule"
              ],
              "depends": ["run.core_generate_router"]
            },
            "InitialCoreProxy": {
              "artifact": "contracts/Proxy.sol:Proxy",
              "args": ["<%= contracts.InitialModuleBundle.address %>"],
              "abiOf": ["InitialModuleBundle"],
              "depends": ["contract.InitialModuleBundle"]
            },
            "AccountRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
              "abiOf": ["InitialModuleBundle", "AccountTokenModule"],
              "depends": ["run.account_generate_router"]
            },
            "USDRouter": {
              "artifact": "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
              "abiOf": ["InitialModuleBundle", "AssociatedSystemsModule", "USDTokenModule"],
              "depends": ["run.usd_generate_router"]
            }
          },
          "run": {
            "core_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    FeatureFlagModule: contracts.FeatureFlagModule,\n    AccountModule: contracts.AccountModule,\n    AssociateDebtModule: contracts.AssociateDebtModule,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    CollateralModule: contracts.CollateralModule,\n    CollateralConfigurationModule: contracts.CollateralConfigurationModule,\n    IssueUSDModule: contracts.IssueUSDModule,\n    LiquidationModule: contracts.LiquidationModule,\n    MarketCollateralModule: contracts.MarketCollateralModule,\n    MarketManagerModule: contracts.MarketManagerModule,\n    MulticallModule: contracts.MulticallModule,\n    PoolConfigurationModule: contracts.PoolConfigurationModule,\n    PoolModule: contracts.PoolModule,\n    RewardsManagerModule: contracts.RewardsManagerModule,\n    UtilsModule: contracts.UtilsModule,\n    VaultModule: contracts.VaultModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/core"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.FeatureFlagModule",
                "contract.AccountModule",
                "contract.AssociateDebtModule",
                "contract.AssociatedSystemsModule",
                "contract.CollateralModule",
                "contract.CollateralConfigurationModule",
                "contract.IssueUSDModule",
                "contract.LiquidationModule",
                "contract.MarketCollateralModule",
                "contract.MarketManagerModule",
                "contract.MulticallModule",
                "contract.PoolConfigurationModule",
                "contract.PoolModule",
                "contract.RewardsManagerModule",
                "contract.UtilsModule",
                "contract.VaultModule"
              ]
            },
            "account_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AccountTokenModule: contracts.AccountTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/common", "contracts/modules/account"],
              "depends": ["contract.InitialModuleBundle", "contract.AccountTokenModule"]
            },
            "usd_generate_router": {
              "exec": "@synthetixio/hardhat-router/utils/cannon",
              "func": "generate",
              "args": [
                "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
                "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    USDTokenModule: contracts.USDTokenModule,\n  }) %>"
              ],
              "modified": ["contracts/modules/associated-systems", "contracts/modules/usd"],
              "depends": [
                "contract.InitialModuleBundle",
                "contract.AssociatedSystemsModule",
                "contract.USDTokenModule"
              ]
            }
          },
          "invoke": {
            "acquire_ownership": {
              "target": ["InitialCoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initializeOwnerModule",
              "args": ["<%= settings.owner %>"],
              "depends": ["contract.InitialCoreProxy"]
            },
            "upgrade_core_proxy": {
              "target": ["InitialCoreProxy"],
              "abi": "UpgradeModule",
              "from": "<%= settings.owner %>",
              "func": "upgradeTo",
              "args": ["<%= contracts.CoreRouter.address %>"],
              "factory": {
                "CoreProxy": {
                  "abiOf": ["CoreRouter"],
                  "event": "Upgraded",
                  "arg": 0
                }
              },
              "depends": ["invoke.acquire_ownership", "contract.CoreRouter"]
            },
            "init_account": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeNft",
              "args": [
                "0x6163636f756e744e667400000000000000000000000000000000000000000000",
                "Synthetix Account",
                "SACCT",
                "https://synthetix.io",
                "<%= contracts.AccountRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.AccountRouter"],
              "factory": {
                "AccountProxy": {
                  "abiOf": ["AccountRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "init_usd": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "initOrUpgradeToken",
              "args": [
                "0x555344546f6b656e000000000000000000000000000000000000000000000000",
                "Synthetic USD Token v3",
                "snxUSD",
                18,
                "<%= contracts.USDRouter.address %>"
              ],
              "depends": ["invoke.upgrade_core_proxy", "contract.USDRouter"],
              "factory": {
                "USDProxy": {
                  "abiOf": ["USDRouter"],
                  "event": "AssociatedSystemSet",
                  "arg": 2
                }
              }
            },
            "set_oracle_manager": {
              "target": ["CoreProxy"],
              "from": "<%= settings.owner %>",
              "func": "configureOracleManager",
              "args": ["<%= imports.oracle_manager.contracts.Proxy.address %>"],
              "depends": ["invoke.upgrade_core_proxy", "import.oracle_manager"]
            }
          }
        },
        "options": {},
        "buildVersion": 3,
        "ipfsHash": "QmbLqxDovnf4z6QMmMQVWPXQnxgMMS3NidZm3Y9cjLq9Bg",
        "heads": ["invoke.init_account", "invoke.init_usd", "invoke.set_oracle_manager"]
      }
    }
  },
  "npmPackage": {
    "name": "@synthetixio/main",
    "version": "3.0.0-alpha.5",
    "description": "Core Synthetix Protocol Contracts",
    "private": true,
    "scripts": {
      "build": "rm -rf contracts/modules/test && hardhat generate-testable",
      "test": "npm run build -- --quiet && hardhat test",
      "coverage": "npm run build -- --quiet && hardhat test",
      "compile-contracts": "hardhat compile",
      "size-contracts": "hardhat size-contracts"
    },
    "keywords": [],
    "author": "",
    "license": "MIT",
    "devDependencies": {
      "@synthetixio/common-config": "*",
      "solidity-docgen": "0.6.0-beta.31"
    }
  },
  "misc": {
    "ipfsHash": "QmVCBDM2gkSxSCKZTGzTTpN5ZdmoRFvh9psEhsUJStmkC2"
  },
  "def": {
    "name": "synthetix",
    "version": "3.0.0-alpha.5",
    "description": "Core synthetix system",
    "setting": {
      "salt": {
        "description": "Change this to a unique string when deploying multiple instances of the system. Note that only the proxy contract will be unique.",
        "defaultValue": "main"
      },
      "owner": {
        "description": "Admin user for the system",
        "defaultValue": "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
      },
      "oracle_manager_source": {
        "defaultValue": "oracle-manager:1.0.1"
      }
    },
    "import": {
      "oracle_manager": {
        "source": "<%= settings.oracle_manager_source %>",
        "options": {
          "owner": "<%= settings.owner %>"
        }
      }
    },
    "contract": {
      "InitialModuleBundle": {
        "artifact": "contracts/modules/InitialModuleBundle.sol:InitialModuleBundle"
      },
      "FeatureFlagModule": {
        "artifact": "contracts/modules/core/FeatureFlagModule.sol:FeatureFlagModule"
      },
      "AccountModule": {
        "artifact": "contracts/modules/core/AccountModule.sol:AccountModule"
      },
      "AssociateDebtModule": {
        "artifact": "contracts/modules/core/AssociateDebtModule.sol:AssociateDebtModule"
      },
      "AssociatedSystemsModule": {
        "artifact": "contracts/modules/associated-systems/AssociatedSystemsModule.sol:AssociatedSystemsModule"
      },
      "CollateralModule": {
        "artifact": "contracts/modules/core/CollateralModule.sol:CollateralModule"
      },
      "CollateralConfigurationModule": {
        "artifact": "contracts/modules/core/CollateralConfigurationModule.sol:CollateralConfigurationModule"
      },
      "IssueUSDModule": {
        "artifact": "contracts/modules/core/IssueUSDModule.sol:IssueUSDModule"
      },
      "LiquidationModule": {
        "artifact": "contracts/modules/core/LiquidationModule.sol:LiquidationModule"
      },
      "MarketCollateralModule": {
        "artifact": "contracts/modules/core/MarketCollateralModule.sol:MarketCollateralModule"
      },
      "MarketManagerModule": {
        "artifact": "contracts/modules/core/MarketManagerModule.sol:MarketManagerModule"
      },
      "MulticallModule": {
        "artifact": "contracts/modules/core/MulticallModule.sol:MulticallModule"
      },
      "PoolConfigurationModule": {
        "artifact": "contracts/modules/core/PoolConfigurationModule.sol:PoolConfigurationModule"
      },
      "PoolModule": {
        "artifact": "contracts/modules/core/PoolModule.sol:PoolModule"
      },
      "RewardsManagerModule": {
        "artifact": "contracts/modules/core/RewardsManagerModule.sol:RewardsManagerModule"
      },
      "UtilsModule": {
        "artifact": "contracts/modules/core/UtilsModule.sol:UtilsModule"
      },
      "VaultModule": {
        "artifact": "contracts/modules/core/VaultModule.sol:VaultModule"
      },
      "AccountTokenModule": {
        "artifact": "contracts/modules/account/AccountTokenModule.sol:AccountTokenModule"
      },
      "USDTokenModule": {
        "artifact": "contracts/modules/usd/USDTokenModule.sol:USDTokenModule"
      },
      "CoreRouter": {
        "artifact": "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
        "abiOf": [
          "InitialModuleBundle",
          "FeatureFlagModule",
          "AccountModule",
          "AssociateDebtModule",
          "AssociatedSystemsModule",
          "CollateralModule",
          "CollateralConfigurationModule",
          "IssueUSDModule",
          "LiquidationModule",
          "MarketCollateralModule",
          "MarketManagerModule",
          "MulticallModule",
          "PoolConfigurationModule",
          "PoolModule",
          "RewardsManagerModule",
          "UtilsModule",
          "VaultModule"
        ],
        "depends": ["run.core_generate_router"]
      },
      "InitialCoreProxy": {
        "artifact": "contracts/Proxy.sol:Proxy",
        "args": ["<%= contracts.InitialModuleBundle.address %>"],
        "abiOf": ["InitialModuleBundle"],
        "depends": ["contract.InitialModuleBundle"]
      },
      "AccountRouter": {
        "artifact": "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
        "abiOf": ["InitialModuleBundle", "AccountTokenModule"],
        "depends": ["run.account_generate_router"]
      },
      "USDRouter": {
        "artifact": "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
        "abiOf": ["InitialModuleBundle", "AssociatedSystemsModule", "USDTokenModule"],
        "depends": ["run.usd_generate_router"]
      }
    },
    "run": {
      "core_generate_router": {
        "exec": "@synthetixio/hardhat-router/utils/cannon",
        "func": "generate",
        "args": [
          "contracts/routers/chain-<%= chainId %>/CoreRouter.sol:CoreRouter",
          "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    FeatureFlagModule: contracts.FeatureFlagModule,\n    AccountModule: contracts.AccountModule,\n    AssociateDebtModule: contracts.AssociateDebtModule,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    CollateralModule: contracts.CollateralModule,\n    CollateralConfigurationModule: contracts.CollateralConfigurationModule,\n    IssueUSDModule: contracts.IssueUSDModule,\n    LiquidationModule: contracts.LiquidationModule,\n    MarketCollateralModule: contracts.MarketCollateralModule,\n    MarketManagerModule: contracts.MarketManagerModule,\n    MulticallModule: contracts.MulticallModule,\n    PoolConfigurationModule: contracts.PoolConfigurationModule,\n    PoolModule: contracts.PoolModule,\n    RewardsManagerModule: contracts.RewardsManagerModule,\n    UtilsModule: contracts.UtilsModule,\n    VaultModule: contracts.VaultModule,\n  }) %>"
        ],
        "modified": ["contracts/modules/core"],
        "depends": [
          "contract.InitialModuleBundle",
          "contract.FeatureFlagModule",
          "contract.AccountModule",
          "contract.AssociateDebtModule",
          "contract.AssociatedSystemsModule",
          "contract.CollateralModule",
          "contract.CollateralConfigurationModule",
          "contract.IssueUSDModule",
          "contract.LiquidationModule",
          "contract.MarketCollateralModule",
          "contract.MarketManagerModule",
          "contract.MulticallModule",
          "contract.PoolConfigurationModule",
          "contract.PoolModule",
          "contract.RewardsManagerModule",
          "contract.UtilsModule",
          "contract.VaultModule"
        ]
      },
      "account_generate_router": {
        "exec": "@synthetixio/hardhat-router/utils/cannon",
        "func": "generate",
        "args": [
          "contracts/routers/chain-<%= chainId %>/AccountRouter.sol:AccountRouter",
          "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AccountTokenModule: contracts.AccountTokenModule,\n  }) %>"
        ],
        "modified": ["contracts/modules/common", "contracts/modules/account"],
        "depends": ["contract.InitialModuleBundle", "contract.AccountTokenModule"]
      },
      "usd_generate_router": {
        "exec": "@synthetixio/hardhat-router/utils/cannon",
        "func": "generate",
        "args": [
          "contracts/routers/chain-<%= chainId %>/USDRouter.sol:USDRouter",
          "<%= JSON.stringify({\n    InitialModuleBundle: contracts.InitialModuleBundle,\n    AssociatedSystemsModule: contracts.AssociatedSystemsModule,\n    USDTokenModule: contracts.USDTokenModule,\n  }) %>"
        ],
        "modified": ["contracts/modules/associated-systems", "contracts/modules/usd"],
        "depends": [
          "contract.InitialModuleBundle",
          "contract.AssociatedSystemsModule",
          "contract.USDTokenModule"
        ]
      }
    },
    "invoke": {
      "acquire_ownership": {
        "target": ["InitialCoreProxy"],
        "from": "<%= settings.owner %>",
        "func": "initializeOwnerModule",
        "args": ["<%= settings.owner %>"],
        "depends": ["contract.InitialCoreProxy"]
      },
      "upgrade_core_proxy": {
        "target": ["InitialCoreProxy"],
        "abi": "UpgradeModule",
        "from": "<%= settings.owner %>",
        "func": "upgradeTo",
        "args": ["<%= contracts.CoreRouter.address %>"],
        "factory": {
          "CoreProxy": {
            "abiOf": ["CoreRouter"],
            "event": "Upgraded",
            "arg": 0
          }
        },
        "depends": ["invoke.acquire_ownership", "contract.CoreRouter"]
      },
      "init_account": {
        "target": ["CoreProxy"],
        "from": "<%= settings.owner %>",
        "func": "initOrUpgradeNft",
        "args": [
          "0x6163636f756e744e667400000000000000000000000000000000000000000000",
          "Synthetix Account",
          "SACCT",
          "https://synthetix.io",
          "<%= contracts.AccountRouter.address %>"
        ],
        "depends": ["invoke.upgrade_core_proxy", "contract.AccountRouter"],
        "factory": {
          "AccountProxy": {
            "abiOf": ["AccountRouter"],
            "event": "AssociatedSystemSet",
            "arg": 2
          }
        }
      },
      "init_usd": {
        "target": ["CoreProxy"],
        "from": "<%= settings.owner %>",
        "func": "initOrUpgradeToken",
        "args": [
          "0x555344546f6b656e000000000000000000000000000000000000000000000000",
          "Synthetic USD Token v3",
          "snxUSD",
          18,
          "<%= contracts.USDRouter.address %>"
        ],
        "depends": ["invoke.upgrade_core_proxy", "contract.USDRouter"],
        "factory": {
          "USDProxy": {
            "abiOf": ["USDRouter"],
            "event": "AssociatedSystemSet",
            "arg": 2
          }
        }
      },
      "set_oracle_manager": {
        "target": ["CoreProxy"],
        "from": "<%= settings.owner %>",
        "func": "configureOracleManager",
        "args": ["<%= imports.oracle_manager.contracts.Proxy.address %>"],
        "depends": ["invoke.upgrade_core_proxy", "import.oracle_manager"]
      }
    }
  },
  "upgradeFrom": "synthetix:3.0.0-alpha.4"
}
