interface Metadata {
  created_at: BigInt!
  created_at_block: BigInt!
  updated_at: BigInt
  updated_at_block: BigInt
}

type Pool @entity {
  id: ID!
  owner: Bytes!
  created_at: BigInt!
  created_at_block: BigInt!
  updated_at: BigInt
  updated_at_block: BigInt
  "Only set when name of the pool got updated"
  name: String
}

type Market @entity {
  id: ID!
  address: Bytes!
  created_at: BigInt!
  created_at_block: BigInt!
  updated_at: BigInt
  updated_at_block: BigInt
  weight: BigDecimal
  "Market manager, event name is different"
  usd_minted: BigDecimal
  "Market manager, event name is different"
  usd_burned: BigDecimal
  "Make a contract call"
  reported_debt: BigDecimal
  "Name of the market"
  name: String
}

type PoolAndMarket @entity {
  "pool id + market id"
  id: ID!
  pool: Pool!
  market: Market!
  max_debt_share_value: BigDecimal
  updated_at: BigInt
  updated_at_block: BigInt
}

type CollateralType @entity {
  "address of an ERC20 contract"
  id: ID!
  depositing_enabled: Boolean!
  target_c_ratio: BigInt!
  minimum_c_ratio: BigInt!
  liquidation_reward: BigDecimal!
  "collateral deposited for adding up and collateral removed for subtraction / CollateralModule Contract"
  created_at: BigInt!
  created_at_block: BigInt!
  total_amount_deposited: BigInt
  updated_at: BigInt
  updated_at_block: BigInt
}

type Account @entity {
  "NFT TOKEN ID"
  id: ID!
  owner: Bytes!
  "roles and permissions"
  permissions: AccountPermissionUsers
}

type AccountPermissionUsers @entity {
  "NFT Token ID - user address"
  id: ID!
  address: Bytes!
  permissions: Bytes!
}

# type Position @entity{
#   id: ID! "NFT Token ID + pool id + collateral type address | concat it"
#   total_minted: BigInt!
#   total_burned: BigInt!
#   "value of delegation updated event. No computation!"
#   collateral_amount: BigInt!
#   "position is updated, call the c ratio function?"
#   c_ratio: BigInt!
#   updated_at: BigInt!
# }

# type Vault @entity {
#   id: "pool id + collateral type address"
#   "When processing the delegation updated event, if already collateral amount, then compute that, minus or plus,
#    if not just put it in"
#   collateral_amount: BigInt!
# }
