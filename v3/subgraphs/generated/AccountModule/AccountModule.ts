// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class AccountCreated extends ethereum.Event {
  get params(): AccountCreated__Params {
    return new AccountCreated__Params(this);
  }
}

export class AccountCreated__Params {
  _event: AccountCreated;

  constructor(event: AccountCreated) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PermissionGranted extends ethereum.Event {
  get params(): PermissionGranted__Params {
    return new PermissionGranted__Params(this);
  }
}

export class PermissionGranted__Params {
  _event: PermissionGranted;

  constructor(event: PermissionGranted) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class PermissionRevoked extends ethereum.Event {
  get params(): PermissionRevoked__Params {
    return new PermissionRevoked__Params(this);
  }
}

export class PermissionRevoked__Params {
  _event: PermissionRevoked;

  constructor(event: PermissionRevoked) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AccountModule__getAccountPermissionsResultPermissionsStruct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get permissions(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class AccountModule extends ethereum.SmartContract {
  static bind(address: Address): AccountModule {
    return new AccountModule('AccountModule', address);
  }

  getAccountOwner(accountId: BigInt): Address {
    let result = super.call('getAccountOwner', 'getAccountOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);

    return result[0].toAddress();
  }

  try_getAccountOwner(accountId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall('getAccountOwner', 'getAccountOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAccountPermissions(
    accountId: BigInt
  ): Array<AccountModule__getAccountPermissionsResultPermissionsStruct> {
    let result = super.call(
      'getAccountPermissions',
      'getAccountPermissions(uint128):((address,bytes32[])[])',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toTupleArray<AccountModule__getAccountPermissionsResultPermissionsStruct>();
  }

  try_getAccountPermissions(
    accountId: BigInt
  ): ethereum.CallResult<Array<AccountModule__getAccountPermissionsResultPermissionsStruct>> {
    let result = super.tryCall(
      'getAccountPermissions',
      'getAccountPermissions(uint128):((address,bytes32[])[])',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<AccountModule__getAccountPermissionsResultPermissionsStruct>()
    );
  }

  getAccountTokenAddress(): Address {
    let result = super.call('getAccountTokenAddress', 'getAccountTokenAddress():(address)', []);

    return result[0].toAddress();
  }

  try_getAccountTokenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall('getAccountTokenAddress', 'getAccountTokenAddress():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasPermission(accountId: BigInt, permission: Bytes, user: Address): boolean {
    let result = super.call('hasPermission', 'hasPermission(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBoolean();
  }

  try_hasPermission(
    accountId: BigInt,
    permission: Bytes,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall('hasPermission', 'hasPermission(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorized(accountId: BigInt, permission: Bytes, user: Address): boolean {
    let result = super.call('isAuthorized', 'isAuthorized(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBoolean();
  }

  try_isAuthorized(
    accountId: BigInt,
    permission: Bytes,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall('isAuthorized', 'isAuthorized(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CreateAccountCall extends ethereum.Call {
  get inputs(): CreateAccountCall__Inputs {
    return new CreateAccountCall__Inputs(this);
  }

  get outputs(): CreateAccountCall__Outputs {
    return new CreateAccountCall__Outputs(this);
  }
}

export class CreateAccountCall__Inputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }

  get requestedAccountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateAccountCall__Outputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }
}

export class GrantPermissionCall extends ethereum.Call {
  get inputs(): GrantPermissionCall__Inputs {
    return new GrantPermissionCall__Inputs(this);
  }

  get outputs(): GrantPermissionCall__Outputs {
    return new GrantPermissionCall__Outputs(this);
  }
}

export class GrantPermissionCall__Inputs {
  _call: GrantPermissionCall;

  constructor(call: GrantPermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class GrantPermissionCall__Outputs {
  _call: GrantPermissionCall;

  constructor(call: GrantPermissionCall) {
    this._call = call;
  }
}

export class NotifyAccountTransferCall extends ethereum.Call {
  get inputs(): NotifyAccountTransferCall__Inputs {
    return new NotifyAccountTransferCall__Inputs(this);
  }

  get outputs(): NotifyAccountTransferCall__Outputs {
    return new NotifyAccountTransferCall__Outputs(this);
  }
}

export class NotifyAccountTransferCall__Inputs {
  _call: NotifyAccountTransferCall;

  constructor(call: NotifyAccountTransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get accountId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class NotifyAccountTransferCall__Outputs {
  _call: NotifyAccountTransferCall;

  constructor(call: NotifyAccountTransferCall) {
    this._call = call;
  }
}

export class RenouncePermissionCall extends ethereum.Call {
  get inputs(): RenouncePermissionCall__Inputs {
    return new RenouncePermissionCall__Inputs(this);
  }

  get outputs(): RenouncePermissionCall__Outputs {
    return new RenouncePermissionCall__Outputs(this);
  }
}

export class RenouncePermissionCall__Inputs {
  _call: RenouncePermissionCall;

  constructor(call: RenouncePermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RenouncePermissionCall__Outputs {
  _call: RenouncePermissionCall;

  constructor(call: RenouncePermissionCall) {
    this._call = call;
  }
}

export class RevokePermissionCall extends ethereum.Call {
  get inputs(): RevokePermissionCall__Inputs {
    return new RevokePermissionCall__Inputs(this);
  }

  get outputs(): RevokePermissionCall__Outputs {
    return new RevokePermissionCall__Outputs(this);
  }
}

export class RevokePermissionCall__Inputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RevokePermissionCall__Outputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }
}
