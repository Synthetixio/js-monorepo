// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class NominatedPoolOwner extends ethereum.Event {
  get params(): NominatedPoolOwner__Params {
    return new NominatedPoolOwner__Params(this);
  }
}

export class NominatedPoolOwner__Params {
  _event: NominatedPoolOwner;

  constructor(event: NominatedPoolOwner) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolConfigurationSet extends ethereum.Event {
  get params(): PoolConfigurationSet__Params {
    return new PoolConfigurationSet__Params(this);
  }
}

export class PoolConfigurationSet__Params {
  _event: PoolConfigurationSet;

  constructor(event: PoolConfigurationSet) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get markets(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get weights(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get executedBy(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolNameUpdated extends ethereum.Event {
  get params(): PoolNameUpdated__Params {
    return new PoolNameUpdated__Params(this);
  }
}

export class PoolNameUpdated__Params {
  _event: PoolNameUpdated;

  constructor(event: PoolNameUpdated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PoolNominationRenounced extends ethereum.Event {
  get params(): PoolNominationRenounced__Params {
    return new PoolNominationRenounced__Params(this);
  }
}

export class PoolNominationRenounced__Params {
  _event: PoolNominationRenounced;

  constructor(event: PoolNominationRenounced) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolNominationRevoked extends ethereum.Event {
  get params(): PoolNominationRevoked__Params {
    return new PoolNominationRevoked__Params(this);
  }
}

export class PoolNominationRevoked__Params {
  _event: PoolNominationRevoked;

  constructor(event: PoolNominationRevoked) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolOwnershipAccepted extends ethereum.Event {
  get params(): PoolOwnershipAccepted__Params {
    return new PoolOwnershipAccepted__Params(this);
  }
}

export class PoolOwnershipAccepted__Params {
  _event: PoolOwnershipAccepted;

  constructor(event: PoolOwnershipAccepted) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolOwnershipRenounced extends ethereum.Event {
  get params(): PoolOwnershipRenounced__Params {
    return new PoolOwnershipRenounced__Params(this);
  }
}

export class PoolOwnershipRenounced__Params {
  _event: PoolOwnershipRenounced;

  constructor(event: PoolOwnershipRenounced) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolModule__getPoolConfigurationResult {
  value0: Array<BigInt>;
  value1: Array<BigInt>;
  value2: Array<BigInt>;

  constructor(value0: Array<BigInt>, value1: Array<BigInt>, value2: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set('value2', ethereum.Value.fromSignedBigIntArray(this.value2));
    return map;
  }

  getValue0(): Array<BigInt> {
    return this.value0;
  }

  getValue1(): Array<BigInt> {
    return this.value1;
  }

  getValue2(): Array<BigInt> {
    return this.value2;
  }
}

export class PoolModule extends ethereum.SmartContract {
  static bind(address: Address): PoolModule {
    return new PoolModule('PoolModule', address);
  }

  getMinLiquidityRatio(): BigInt {
    let result = super.call('getMinLiquidityRatio', 'getMinLiquidityRatio():(uint256)', []);

    return result[0].toBigInt();
  }

  try_getMinLiquidityRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('getMinLiquidityRatio', 'getMinLiquidityRatio():(uint256)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNominatedPoolOwner(poolId: BigInt): Address {
    let result = super.call('getNominatedPoolOwner', 'getNominatedPoolOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(poolId),
    ]);

    return result[0].toAddress();
  }

  try_getNominatedPoolOwner(poolId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      'getNominatedPoolOwner',
      'getNominatedPoolOwner(uint128):(address)',
      [ethereum.Value.fromUnsignedBigInt(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPoolConfiguration(poolId: BigInt): PoolModule__getPoolConfigurationResult {
    let result = super.call(
      'getPoolConfiguration',
      'getPoolConfiguration(uint128):(uint256[],uint256[],int256[])',
      [ethereum.Value.fromUnsignedBigInt(poolId)]
    );

    return new PoolModule__getPoolConfigurationResult(
      result[0].toBigIntArray(),
      result[1].toBigIntArray(),
      result[2].toBigIntArray()
    );
  }

  try_getPoolConfiguration(
    poolId: BigInt
  ): ethereum.CallResult<PoolModule__getPoolConfigurationResult> {
    let result = super.tryCall(
      'getPoolConfiguration',
      'getPoolConfiguration(uint128):(uint256[],uint256[],int256[])',
      [ethereum.Value.fromUnsignedBigInt(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolModule__getPoolConfigurationResult(
        value[0].toBigIntArray(),
        value[1].toBigIntArray(),
        value[2].toBigIntArray()
      )
    );
  }

  getPoolName(poolId: BigInt): string {
    let result = super.call('getPoolName', 'getPoolName(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(poolId),
    ]);

    return result[0].toString();
  }

  try_getPoolName(poolId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall('getPoolName', 'getPoolName(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(poolId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getPoolOwner(poolId: BigInt): Address {
    let result = super.call('getPoolOwner', 'getPoolOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(poolId),
    ]);

    return result[0].toAddress();
  }

  try_getPoolOwner(poolId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall('getPoolOwner', 'getPoolOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(poolId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AcceptPoolOwnershipCall extends ethereum.Call {
  get inputs(): AcceptPoolOwnershipCall__Inputs {
    return new AcceptPoolOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptPoolOwnershipCall__Outputs {
    return new AcceptPoolOwnershipCall__Outputs(this);
  }
}

export class AcceptPoolOwnershipCall__Inputs {
  _call: AcceptPoolOwnershipCall;

  constructor(call: AcceptPoolOwnershipCall) {
    this._call = call;
  }

  get poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptPoolOwnershipCall__Outputs {
  _call: AcceptPoolOwnershipCall;

  constructor(call: AcceptPoolOwnershipCall) {
    this._call = call;
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get requestedPoolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }
}

export class NominatePoolOwnerCall extends ethereum.Call {
  get inputs(): NominatePoolOwnerCall__Inputs {
    return new NominatePoolOwnerCall__Inputs(this);
  }

  get outputs(): NominatePoolOwnerCall__Outputs {
    return new NominatePoolOwnerCall__Outputs(this);
  }
}

export class NominatePoolOwnerCall__Inputs {
  _call: NominatePoolOwnerCall;

  constructor(call: NominatePoolOwnerCall) {
    this._call = call;
  }

  get nominatedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get poolId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class NominatePoolOwnerCall__Outputs {
  _call: NominatePoolOwnerCall;

  constructor(call: NominatePoolOwnerCall) {
    this._call = call;
  }
}

export class RenouncePoolNominationCall extends ethereum.Call {
  get inputs(): RenouncePoolNominationCall__Inputs {
    return new RenouncePoolNominationCall__Inputs(this);
  }

  get outputs(): RenouncePoolNominationCall__Outputs {
    return new RenouncePoolNominationCall__Outputs(this);
  }
}

export class RenouncePoolNominationCall__Inputs {
  _call: RenouncePoolNominationCall;

  constructor(call: RenouncePoolNominationCall) {
    this._call = call;
  }

  get poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RenouncePoolNominationCall__Outputs {
  _call: RenouncePoolNominationCall;

  constructor(call: RenouncePoolNominationCall) {
    this._call = call;
  }
}

export class RenouncePoolOwnershipCall extends ethereum.Call {
  get inputs(): RenouncePoolOwnershipCall__Inputs {
    return new RenouncePoolOwnershipCall__Inputs(this);
  }

  get outputs(): RenouncePoolOwnershipCall__Outputs {
    return new RenouncePoolOwnershipCall__Outputs(this);
  }
}

export class RenouncePoolOwnershipCall__Inputs {
  _call: RenouncePoolOwnershipCall;

  constructor(call: RenouncePoolOwnershipCall) {
    this._call = call;
  }

  get poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RenouncePoolOwnershipCall__Outputs {
  _call: RenouncePoolOwnershipCall;

  constructor(call: RenouncePoolOwnershipCall) {
    this._call = call;
  }
}

export class SetMinLiquidityRatioCall extends ethereum.Call {
  get inputs(): SetMinLiquidityRatioCall__Inputs {
    return new SetMinLiquidityRatioCall__Inputs(this);
  }

  get outputs(): SetMinLiquidityRatioCall__Outputs {
    return new SetMinLiquidityRatioCall__Outputs(this);
  }
}

export class SetMinLiquidityRatioCall__Inputs {
  _call: SetMinLiquidityRatioCall;

  constructor(call: SetMinLiquidityRatioCall) {
    this._call = call;
  }

  get minLiquidityRatio(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinLiquidityRatioCall__Outputs {
  _call: SetMinLiquidityRatioCall;

  constructor(call: SetMinLiquidityRatioCall) {
    this._call = call;
  }
}

export class SetPoolConfigurationCall extends ethereum.Call {
  get inputs(): SetPoolConfigurationCall__Inputs {
    return new SetPoolConfigurationCall__Inputs(this);
  }

  get outputs(): SetPoolConfigurationCall__Outputs {
    return new SetPoolConfigurationCall__Outputs(this);
  }
}

export class SetPoolConfigurationCall__Inputs {
  _call: SetPoolConfigurationCall;

  constructor(call: SetPoolConfigurationCall) {
    this._call = call;
  }

  get poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get markets(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get weights(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get maxDebtShareValues(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class SetPoolConfigurationCall__Outputs {
  _call: SetPoolConfigurationCall;

  constructor(call: SetPoolConfigurationCall) {
    this._call = call;
  }
}

export class SetPoolNameCall extends ethereum.Call {
  get inputs(): SetPoolNameCall__Inputs {
    return new SetPoolNameCall__Inputs(this);
  }

  get outputs(): SetPoolNameCall__Outputs {
    return new SetPoolNameCall__Outputs(this);
  }
}

export class SetPoolNameCall__Inputs {
  _call: SetPoolNameCall;

  constructor(call: SetPoolNameCall) {
    this._call = call;
  }

  get poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetPoolNameCall__Outputs {
  _call: SetPoolNameCall;

  constructor(call: SetPoolNameCall) {
    this._call = call;
  }
}
