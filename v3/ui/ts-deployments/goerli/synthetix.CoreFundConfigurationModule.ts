export const address = '0xF0fCDf2172eC764023068fda030e3189db08e04a';
export const abi = [
  'error EmptyVault(uint256 fundId, address collateralType)',
  'error FundAlreadyApproved(uint256 fundId)',
  'error FundAlreadyExists(uint256 fundId)',
  'error FundNotFound(uint256 fundId)',
  'error InsufficientAccountCollateral(uint256 accountId, address collateralType, uint256 requestedAmount)',
  'error InvalidCollateralType(address collateralType)',
  'error InvalidParameters(string incorrectParameter, string help)',
  'error OnlyTokenProxyAllowed(address origin)',
  'error Unauthorized(address addr)',
  'event DelegationUpdated(bytes32 liquidityItemId, uint256 accountId, uint256 fundId, address collateralType, uint256 amount, uint256 leverage)',
  'event FundApprovedAdded(uint256 fundId)',
  'event FundApprovedRemoved(uint256 fundId)',
  'event FundCreated(address owner, uint256 fundId)',
  'event FundPositionSet(uint256 fundId, uint256[] markets, uint256[] weights, address executedBy)',
  'event NominatedNewOwner(address nominatedOwner, uint256 fundId)',
  'event OwnershipAccepted(address newOwner, uint256 fundId)',
  'event OwnershipRenounced(address target, uint256 fundId)',
  'event PreferredFundSet(uint256 fundId)',
  'event RewardDistributionSet(uint256 indexed fundId, address indexed token, uint256 indexed index, address distributor, uint256 totalRewarded, uint256 start, uint256 duration)',
  'event RewardsClaimed(uint256 indexed fundId, address indexed token, uint256 indexed accountId, uint256 index, uint256 amountClaimed)',
  'function addApprovedFund(uint256 fundId)',
  'function getApprovedFunds() view returns (uint256[])',
  'function getPreferredFund() view returns (uint256)',
  'function removeApprovedFund(uint256 fundId)',
  'function setPreferredFund(uint256 fundId)',
];
