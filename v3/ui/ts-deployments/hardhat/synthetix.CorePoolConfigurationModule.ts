export const address = '0xD1e696E7Fbe6871EA6C2DEd979fC6BDd821522d9';
export const abi = [
  'error EmptyVault(uint256 poolId, address collateralType)',
  'error InsufficientAccountCollateral(uint256 accountId, address collateralType, uint256 requestedAmount)',
  'error InvalidCollateralType(address collateralType)',
  'error InvalidParameters(string incorrectParameter, string help)',
  'error MarketNotFound(uint256 marketId)',
  'error MaxDebtPerShareTooLow(uint256 marketId, int256 requestedMaxDebtPerShare, int256 maximumMaxDebtPerShare)',
  'error OnlyTokenProxyAllowed(address origin)',
  'error PoolAlreadyApproved(uint256 poolId)',
  'error PoolAlreadyExists(uint256 poolId)',
  'error PoolNotFound(uint256 poolId)',
  'error Unauthorized(address addr)',
  'event DelegationUpdated(uint256 accountId, uint256 poolId, address collateralType, uint256 amount, uint256 leverage)',
  'event NominatedNewOwner(address nominatedOwner, uint256 poolId)',
  'event OwnershipAccepted(address newOwner, uint256 poolId)',
  'event OwnershipRenounced(address target, uint256 poolId)',
  'event PoolApprovedAdded(uint256 poolId)',
  'event PoolApprovedRemoved(uint256 poolId)',
  'event PoolCreated(address owner, uint256 poolId)',
  'event PoolPositionSet(uint256 poolId, uint256[] markets, uint256[] weights, address executedBy)',
  'event PreferredPoolSet(uint256 poolId)',
  'event RewardDistributionSet(uint256 indexed poolId, address indexed token, uint256 indexed index, address distributor, uint256 totalRewarded, uint256 start, uint256 duration)',
  'event RewardsClaimed(uint256 indexed poolId, address indexed token, uint256 indexed accountId, uint256 index, uint256 amountClaimed)',
  'function addApprovedPool(uint256 poolId)',
  'function getApprovedPools() view returns (uint256[])',
  'function getPreferredPool() view returns (uint256)',
  'function removeApprovedPool(uint256 poolId)',
  'function setPreferredPool(uint256 poolId)',
];
