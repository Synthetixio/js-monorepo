{
  "address": "0x76ba5e27833bd4c1DeB8d9a3B8C5647d667ce3b5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleManagerAddress",
          "type": "address"
        }
      ],
      "name": "configureOracleManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "k",
          "type": "bytes32"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "v",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ccipSend",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ccipReceive",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ccipTokenPool",
          "type": "address"
        }
      ],
      "name": "registerCcip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "k",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "v",
          "type": "bytes32"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "constructorArgs": [],
  "linkedLibraries": {},
  "deployTxnHash": "0xd886e870b20c17a34cf56a31a0750aa25a84e2da660a8a7968d9eccb80adb5dc",
  "sourceName": "contracts/modules/core/UtilsModule.sol",
  "contractName": "UtilsModule",
  "deployedOn": "contract.UtilsModule"
}