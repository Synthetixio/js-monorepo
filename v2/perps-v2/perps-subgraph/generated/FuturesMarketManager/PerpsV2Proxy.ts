// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class CacheUpdated extends ethereum.Event {
  get params(): CacheUpdated__Params {
    return new CacheUpdated__Params(this);
  }
}

export class CacheUpdated__Params {
  _event: CacheUpdated;

  constructor(event: CacheUpdated) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundingRecomputed extends ethereum.Event {
  get params(): FundingRecomputed__Params {
    return new FundingRecomputed__Params(this);
  }
}

export class FundingRecomputed__Params {
  _event: FundingRecomputed;

  constructor(event: FundingRecomputed) {
    this._event = event;
  }

  get funding(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class MarginTransferred extends ethereum.Event {
  get params(): MarginTransferred__Params {
    return new MarginTransferred__Params(this);
  }
}

export class MarginTransferred__Params {
  _event: MarginTransferred;

  constructor(event: MarginTransferred) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marginDelta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated extends ethereum.Event {
  get params(): OwnerNominated__Params {
    return new OwnerNominated__Params(this);
  }
}

export class OwnerNominated__Params {
  _event: OwnerNominated;

  constructor(event: OwnerNominated) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PerpsTracking extends ethereum.Event {
  get params(): PerpsTracking__Params {
    return new PerpsTracking__Params(this);
  }
}

export class PerpsTracking__Params {
  _event: PerpsTracking;

  constructor(event: PerpsTracking) {
    this._event = event;
  }

  get trackingCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get baseAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PositionModified extends ethereum.Event {
  get params(): PositionModified__Params {
    return new PositionModified__Params(this);
  }
}

export class PositionModified__Params {
  _event: PositionModified;

  constructor(event: PositionModified) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradeSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lastPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get skew(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProxyUpdated extends ethereum.Event {
  get params(): ProxyUpdated__Params {
    return new ProxyUpdated__Params(this);
  }
}

export class ProxyUpdated__Params {
  _event: ProxyUpdated;

  constructor(event: ProxyUpdated) {
    this._event = event;
  }

  get proxyAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CacheUpdated1 extends ethereum.Event {
  get params(): CacheUpdated1__Params {
    return new CacheUpdated1__Params(this);
  }
}

export class CacheUpdated1__Params {
  _event: CacheUpdated1;

  constructor(event: CacheUpdated1) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelayedOrderRemoved extends ethereum.Event {
  get params(): DelayedOrderRemoved__Params {
    return new DelayedOrderRemoved__Params(this);
  }
}

export class DelayedOrderRemoved__Params {
  _event: DelayedOrderRemoved;

  constructor(event: DelayedOrderRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isOffchain(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get currentRoundId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get targetRoundId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get commitDeposit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get keeperDeposit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class FundingRecomputed1 extends ethereum.Event {
  get params(): FundingRecomputed1__Params {
    return new FundingRecomputed1__Params(this);
  }
}

export class FundingRecomputed1__Params {
  _event: FundingRecomputed1;

  constructor(event: FundingRecomputed1) {
    this._event = event;
  }

  get funding(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnerChanged1 extends ethereum.Event {
  get params(): OwnerChanged1__Params {
    return new OwnerChanged1__Params(this);
  }
}

export class OwnerChanged1__Params {
  _event: OwnerChanged1;

  constructor(event: OwnerChanged1) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated1 extends ethereum.Event {
  get params(): OwnerNominated1__Params {
    return new OwnerNominated1__Params(this);
  }
}

export class OwnerNominated1__Params {
  _event: OwnerNominated1;

  constructor(event: OwnerNominated1) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PerpsTracking1 extends ethereum.Event {
  get params(): PerpsTracking1__Params {
    return new PerpsTracking1__Params(this);
  }
}

export class PerpsTracking1__Params {
  _event: PerpsTracking1;

  constructor(event: PerpsTracking1) {
    this._event = event;
  }

  get trackingCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get baseAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PositionModified1 extends ethereum.Event {
  get params(): PositionModified1__Params {
    return new PositionModified1__Params(this);
  }
}

export class PositionModified1__Params {
  _event: PositionModified1;

  constructor(event: PositionModified1) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradeSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lastPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get skew(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProxyUpdated1 extends ethereum.Event {
  get params(): ProxyUpdated1__Params {
    return new ProxyUpdated1__Params(this);
  }
}

export class ProxyUpdated1__Params {
  _event: ProxyUpdated1;

  constructor(event: ProxyUpdated1) {
    this._event = event;
  }

  get proxyAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CacheUpdated2 extends ethereum.Event {
  get params(): CacheUpdated2__Params {
    return new CacheUpdated2__Params(this);
  }
}

export class CacheUpdated2__Params {
  _event: CacheUpdated2;

  constructor(event: CacheUpdated2) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerChanged2 extends ethereum.Event {
  get params(): OwnerChanged2__Params {
    return new OwnerChanged2__Params(this);
  }
}

export class OwnerChanged2__Params {
  _event: OwnerChanged2;

  constructor(event: OwnerChanged2) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated2 extends ethereum.Event {
  get params(): OwnerNominated2__Params {
    return new OwnerNominated2__Params(this);
  }
}

export class OwnerNominated2__Params {
  _event: OwnerNominated2;

  constructor(event: OwnerNominated2) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CacheUpdated3 extends ethereum.Event {
  get params(): CacheUpdated3__Params {
    return new CacheUpdated3__Params(this);
  }
}

export class CacheUpdated3__Params {
  _event: CacheUpdated3;

  constructor(event: CacheUpdated3) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EndorsedAddressAdded extends ethereum.Event {
  get params(): EndorsedAddressAdded__Params {
    return new EndorsedAddressAdded__Params(this);
  }
}

export class EndorsedAddressAdded__Params {
  _event: EndorsedAddressAdded;

  constructor(event: EndorsedAddressAdded) {
    this._event = event;
  }

  get endorsedAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EndorsedAddressRemoved extends ethereum.Event {
  get params(): EndorsedAddressRemoved__Params {
    return new EndorsedAddressRemoved__Params(this);
  }
}

export class EndorsedAddressRemoved__Params {
  _event: EndorsedAddressRemoved;

  constructor(event: EndorsedAddressRemoved) {
    this._event = event;
  }

  get endorsedAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MarketAdded extends ethereum.Event {
  get params(): MarketAdded__Params {
    return new MarketAdded__Params(this);
  }
}

export class MarketAdded__Params {
  _event: MarketAdded;

  constructor(event: MarketAdded) {
    this._event = event;
  }

  get market(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class MarketRemoved extends ethereum.Event {
  get params(): MarketRemoved__Params {
    return new MarketRemoved__Params(this);
  }
}

export class MarketRemoved__Params {
  _event: MarketRemoved;

  constructor(event: MarketRemoved) {
    this._event = event;
  }

  get market(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class OwnerChanged3 extends ethereum.Event {
  get params(): OwnerChanged3__Params {
    return new OwnerChanged3__Params(this);
  }
}

export class OwnerChanged3__Params {
  _event: OwnerChanged3;

  constructor(event: OwnerChanged3) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated3 extends ethereum.Event {
  get params(): OwnerNominated3__Params {
    return new OwnerNominated3__Params(this);
  }
}

export class OwnerNominated3__Params {
  _event: OwnerNominated3;

  constructor(event: OwnerNominated3) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CacheUpdated4 extends ethereum.Event {
  get params(): CacheUpdated4__Params {
    return new CacheUpdated4__Params(this);
  }
}

export class CacheUpdated4__Params {
  _event: CacheUpdated4;

  constructor(event: CacheUpdated4) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelayedOrderSubmitted extends ethereum.Event {
  get params(): DelayedOrderSubmitted__Params {
    return new DelayedOrderSubmitted__Params(this);
  }
}

export class DelayedOrderSubmitted__Params {
  _event: DelayedOrderSubmitted;

  constructor(event: DelayedOrderSubmitted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isOffchain(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get targetRoundId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get intentionTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get executableAtTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get commitDeposit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get keeperDeposit(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class FundingRecomputed2 extends ethereum.Event {
  get params(): FundingRecomputed2__Params {
    return new FundingRecomputed2__Params(this);
  }
}

export class FundingRecomputed2__Params {
  _event: FundingRecomputed2;

  constructor(event: FundingRecomputed2) {
    this._event = event;
  }

  get funding(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnerChanged4 extends ethereum.Event {
  get params(): OwnerChanged4__Params {
    return new OwnerChanged4__Params(this);
  }
}

export class OwnerChanged4__Params {
  _event: OwnerChanged4;

  constructor(event: OwnerChanged4) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated4 extends ethereum.Event {
  get params(): OwnerNominated4__Params {
    return new OwnerNominated4__Params(this);
  }
}

export class OwnerNominated4__Params {
  _event: OwnerNominated4;

  constructor(event: OwnerNominated4) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PerpsTracking2 extends ethereum.Event {
  get params(): PerpsTracking2__Params {
    return new PerpsTracking2__Params(this);
  }
}

export class PerpsTracking2__Params {
  _event: PerpsTracking2;

  constructor(event: PerpsTracking2) {
    this._event = event;
  }

  get trackingCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get baseAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PositionModified2 extends ethereum.Event {
  get params(): PositionModified2__Params {
    return new PositionModified2__Params(this);
  }
}

export class PositionModified2__Params {
  _event: PositionModified2;

  constructor(event: PositionModified2) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradeSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lastPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get skew(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProxyUpdated2 extends ethereum.Event {
  get params(): ProxyUpdated2__Params {
    return new ProxyUpdated2__Params(this);
  }
}

export class ProxyUpdated2__Params {
  _event: ProxyUpdated2;

  constructor(event: ProxyUpdated2) {
    this._event = event;
  }

  get proxyAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CacheUpdated5 extends ethereum.Event {
  get params(): CacheUpdated5__Params {
    return new CacheUpdated5__Params(this);
  }
}

export class CacheUpdated5__Params {
  _event: CacheUpdated5;

  constructor(event: CacheUpdated5) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get destination(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundingRecomputed3 extends ethereum.Event {
  get params(): FundingRecomputed3__Params {
    return new FundingRecomputed3__Params(this);
  }
}

export class FundingRecomputed3__Params {
  _event: FundingRecomputed3;

  constructor(event: FundingRecomputed3) {
    this._event = event;
  }

  get funding(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnerChanged5 extends ethereum.Event {
  get params(): OwnerChanged5__Params {
    return new OwnerChanged5__Params(this);
  }
}

export class OwnerChanged5__Params {
  _event: OwnerChanged5;

  constructor(event: OwnerChanged5) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated5 extends ethereum.Event {
  get params(): OwnerNominated5__Params {
    return new OwnerNominated5__Params(this);
  }
}

export class OwnerNominated5__Params {
  _event: OwnerNominated5;

  constructor(event: OwnerNominated5) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PerpsTracking3 extends ethereum.Event {
  get params(): PerpsTracking3__Params {
    return new PerpsTracking3__Params(this);
  }
}

export class PerpsTracking3__Params {
  _event: PerpsTracking3;

  constructor(event: PerpsTracking3) {
    this._event = event;
  }

  get trackingCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get baseAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PositionFlagged extends ethereum.Event {
  get params(): PositionFlagged__Params {
    return new PositionFlagged__Params(this);
  }
}

export class PositionFlagged__Params {
  _event: PositionFlagged;

  constructor(event: PositionFlagged) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get flagger(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PositionLiquidated extends ethereum.Event {
  get params(): PositionLiquidated__Params {
    return new PositionLiquidated__Params(this);
  }
}

export class PositionLiquidated__Params {
  _event: PositionLiquidated;

  constructor(event: PositionLiquidated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class PositionModified3 extends ethereum.Event {
  get params(): PositionModified3__Params {
    return new PositionModified3__Params(this);
  }
}

export class PositionModified3__Params {
  _event: PositionModified3;

  constructor(event: PositionModified3) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradeSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lastPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get skew(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ProxyUpdated3 extends ethereum.Event {
  get params(): ProxyUpdated3__Params {
    return new ProxyUpdated3__Params(this);
  }
}

export class ProxyUpdated3__Params {
  _event: ProxyUpdated3;

  constructor(event: ProxyUpdated3) {
    this._event = event;
  }

  get proxyAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PerpsV2Proxy__allMarketSummariesResultValue0Struct extends ethereum.Tuple {
  get market(): Address {
    return this[0].toAddress();
  }

  get asset(): Bytes {
    return this[1].toBytes();
  }

  get marketKey(): Bytes {
    return this[2].toBytes();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get marketSize(): BigInt {
    return this[4].toBigInt();
  }

  get marketSkew(): BigInt {
    return this[5].toBigInt();
  }

  get marketDebt(): BigInt {
    return this[6].toBigInt();
  }

  get currentFundingRate(): BigInt {
    return this[7].toBigInt();
  }

  get currentFundingVelocity(): BigInt {
    return this[8].toBigInt();
  }

  get priceInvalid(): boolean {
    return this[9].toBoolean();
  }

  get proxied(): boolean {
    return this[10].toBoolean();
  }
}

export class PerpsV2Proxy__marketSummariesResultValue0Struct extends ethereum.Tuple {
  get market(): Address {
    return this[0].toAddress();
  }

  get asset(): Bytes {
    return this[1].toBytes();
  }

  get marketKey(): Bytes {
    return this[2].toBytes();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get marketSize(): BigInt {
    return this[4].toBigInt();
  }

  get marketSkew(): BigInt {
    return this[5].toBigInt();
  }

  get marketDebt(): BigInt {
    return this[6].toBigInt();
  }

  get currentFundingRate(): BigInt {
    return this[7].toBigInt();
  }

  get currentFundingVelocity(): BigInt {
    return this[8].toBigInt();
  }

  get priceInvalid(): boolean {
    return this[9].toBoolean();
  }

  get proxied(): boolean {
    return this[10].toBoolean();
  }
}

export class PerpsV2Proxy__marketSummariesForKeysResultValue0Struct extends ethereum.Tuple {
  get market(): Address {
    return this[0].toAddress();
  }

  get asset(): Bytes {
    return this[1].toBytes();
  }

  get marketKey(): Bytes {
    return this[2].toBytes();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get marketSize(): BigInt {
    return this[4].toBigInt();
  }

  get marketSkew(): BigInt {
    return this[5].toBigInt();
  }

  get marketDebt(): BigInt {
    return this[6].toBigInt();
  }

  get currentFundingRate(): BigInt {
    return this[7].toBigInt();
  }

  get currentFundingVelocity(): BigInt {
    return this[8].toBigInt();
  }

  get priceInvalid(): boolean {
    return this[9].toBoolean();
  }

  get proxied(): boolean {
    return this[10].toBoolean();
  }
}

export class PerpsV2Proxy__totalDebtResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getDebt(): BigInt {
    return this.value0;
  }

  getIsInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2Proxy extends ethereum.SmartContract {
  static bind(address: Address): PerpsV2Proxy {
    return new PerpsV2Proxy('PerpsV2Proxy', address);
  }

  isResolverCached(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketState(): Address {
    let result = super.call('marketState', 'marketState():(address)', []);

    return result[0].toAddress();
  }

  try_marketState(): ethereum.CallResult<Address> {
    let result = super.tryCall('marketState', 'marketState():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messageSender(): Address {
    let result = super.call('messageSender', 'messageSender():(address)', []);

    return result[0].toAddress();
  }

  try_messageSender(): ethereum.CallResult<Address> {
    let result = super.tryCall('messageSender', 'messageSender():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxy(): Address {
    let result = super.call('proxy', 'proxy():(address)', []);

    return result[0].toAddress();
  }

  try_proxy(): ethereum.CallResult<Address> {
    let result = super.tryCall('proxy', 'proxy():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  recomputeFunding(): BigInt {
    let result = super.call('recomputeFunding', 'recomputeFunding():(uint256)', []);

    return result[0].toBigInt();
  }

  try_recomputeFunding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('recomputeFunding', 'recomputeFunding():(uint256)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  resolver(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  isResolverCached1(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached1(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketState1(): Address {
    let result = super.call('marketState', 'marketState():(address)', []);

    return result[0].toAddress();
  }

  try_marketState1(): ethereum.CallResult<Address> {
    let result = super.tryCall('marketState', 'marketState():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messageSender1(): Address {
    let result = super.call('messageSender', 'messageSender():(address)', []);

    return result[0].toAddress();
  }

  try_messageSender1(): ethereum.CallResult<Address> {
    let result = super.tryCall('messageSender', 'messageSender():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner1(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner1(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner1(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner1(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxy1(): Address {
    let result = super.call('proxy', 'proxy():(address)', []);

    return result[0].toAddress();
  }

  try_proxy1(): ethereum.CallResult<Address> {
    let result = super.tryCall('proxy', 'proxy():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolver1(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver1(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired1(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired1(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  isResolverCached2(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached2(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketState2(): Address {
    let result = super.call('marketState', 'marketState():(address)', []);

    return result[0].toAddress();
  }

  try_marketState2(): ethereum.CallResult<Address> {
    let result = super.tryCall('marketState', 'marketState():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner2(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner2(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner2(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner2(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolver2(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver2(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired2(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired2(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  CONTRACT_NAME(): Bytes {
    let result = super.call('CONTRACT_NAME', 'CONTRACT_NAME():(bytes32)', []);

    return result[0].toBytes();
  }

  try_CONTRACT_NAME(): ethereum.CallResult<Bytes> {
    let result = super.tryCall('CONTRACT_NAME', 'CONTRACT_NAME():(bytes32)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allEndorsedAddresses(): Array<Address> {
    let result = super.call('allEndorsedAddresses', 'allEndorsedAddresses():(address[])', []);

    return result[0].toAddressArray();
  }

  try_allEndorsedAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('allEndorsedAddresses', 'allEndorsedAddresses():(address[])', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  allMarketSummaries(): Array<PerpsV2Proxy__allMarketSummariesResultValue0Struct> {
    let result = super.call(
      'allMarketSummaries',
      'allMarketSummaries():((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      []
    );

    return result[0].toTupleArray<PerpsV2Proxy__allMarketSummariesResultValue0Struct>();
  }

  try_allMarketSummaries(): ethereum.CallResult<
    Array<PerpsV2Proxy__allMarketSummariesResultValue0Struct>
  > {
    let result = super.tryCall(
      'allMarketSummaries',
      'allMarketSummaries():((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<PerpsV2Proxy__allMarketSummariesResultValue0Struct>()
    );
  }

  allMarkets(): Array<Address> {
    let result = super.call('allMarkets', 'allMarkets():(address[])', []);

    return result[0].toAddressArray();
  }

  try_allMarkets(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('allMarkets', 'allMarkets():(address[])', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  allMarkets1(proxiedMarkets: boolean): Array<Address> {
    let result = super.call('allMarkets', 'allMarkets(bool):(address[])', [
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);

    return result[0].toAddressArray();
  }

  try_allMarkets1(proxiedMarkets: boolean): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('allMarkets', 'allMarkets(bool):(address[])', [
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  burnSUSD(account: Address, amount: BigInt): BigInt {
    let result = super.call('burnSUSD', 'burnSUSD(address,uint256):(uint256)', [
      ethereum.Value.fromAddress(account),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBigInt();
  }

  try_burnSUSD(account: Address, amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('burnSUSD', 'burnSUSD(address,uint256):(uint256)', [
      ethereum.Value.fromAddress(account),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isEndorsed(account: Address): boolean {
    let result = super.call('isEndorsed', 'isEndorsed(address):(bool)', [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_isEndorsed(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall('isEndorsed', 'isEndorsed(address):(bool)', [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isResolverCached3(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached3(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketForKey(param0: Bytes): Address {
    let result = super.call('marketForKey', 'marketForKey(bytes32):(address)', [
      ethereum.Value.fromFixedBytes(param0),
    ]);

    return result[0].toAddress();
  }

  try_marketForKey(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall('marketForKey', 'marketForKey(bytes32):(address)', [
      ethereum.Value.fromFixedBytes(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  marketSummaries(
    addresses: Array<Address>
  ): Array<PerpsV2Proxy__marketSummariesResultValue0Struct> {
    let result = super.call(
      'marketSummaries',
      'marketSummaries(address[]):((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      [ethereum.Value.fromAddressArray(addresses)]
    );

    return result[0].toTupleArray<PerpsV2Proxy__marketSummariesResultValue0Struct>();
  }

  try_marketSummaries(
    addresses: Array<Address>
  ): ethereum.CallResult<Array<PerpsV2Proxy__marketSummariesResultValue0Struct>> {
    let result = super.tryCall(
      'marketSummaries',
      'marketSummaries(address[]):((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      [ethereum.Value.fromAddressArray(addresses)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<PerpsV2Proxy__marketSummariesResultValue0Struct>()
    );
  }

  marketSummariesForKeys(
    marketKeys: Array<Bytes>
  ): Array<PerpsV2Proxy__marketSummariesForKeysResultValue0Struct> {
    let result = super.call(
      'marketSummariesForKeys',
      'marketSummariesForKeys(bytes32[]):((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      [ethereum.Value.fromFixedBytesArray(marketKeys)]
    );

    return result[0].toTupleArray<PerpsV2Proxy__marketSummariesForKeysResultValue0Struct>();
  }

  try_marketSummariesForKeys(
    marketKeys: Array<Bytes>
  ): ethereum.CallResult<Array<PerpsV2Proxy__marketSummariesForKeysResultValue0Struct>> {
    let result = super.tryCall(
      'marketSummariesForKeys',
      'marketSummariesForKeys(bytes32[]):((address,bytes32,bytes32,uint256,uint256,int256,uint256,int256,int256,bool,bool)[])',
      [ethereum.Value.fromFixedBytesArray(marketKeys)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<PerpsV2Proxy__marketSummariesForKeysResultValue0Struct>()
    );
  }

  markets(index: BigInt, pageSize: BigInt, proxiedMarkets: boolean): Array<Address> {
    let result = super.call('markets', 'markets(uint256,uint256,bool):(address[])', [
      ethereum.Value.fromUnsignedBigInt(index),
      ethereum.Value.fromUnsignedBigInt(pageSize),
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);

    return result[0].toAddressArray();
  }

  try_markets(
    index: BigInt,
    pageSize: BigInt,
    proxiedMarkets: boolean
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('markets', 'markets(uint256,uint256,bool):(address[])', [
      ethereum.Value.fromUnsignedBigInt(index),
      ethereum.Value.fromUnsignedBigInt(pageSize),
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  markets1(index: BigInt, pageSize: BigInt): Array<Address> {
    let result = super.call('markets', 'markets(uint256,uint256):(address[])', [
      ethereum.Value.fromUnsignedBigInt(index),
      ethereum.Value.fromUnsignedBigInt(pageSize),
    ]);

    return result[0].toAddressArray();
  }

  try_markets1(index: BigInt, pageSize: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('markets', 'markets(uint256,uint256):(address[])', [
      ethereum.Value.fromUnsignedBigInt(index),
      ethereum.Value.fromUnsignedBigInt(pageSize),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  marketsForKeys(marketKeys: Array<Bytes>): Array<Address> {
    let result = super.call('marketsForKeys', 'marketsForKeys(bytes32[]):(address[])', [
      ethereum.Value.fromFixedBytesArray(marketKeys),
    ]);

    return result[0].toAddressArray();
  }

  try_marketsForKeys(marketKeys: Array<Bytes>): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('marketsForKeys', 'marketsForKeys(bytes32[]):(address[])', [
      ethereum.Value.fromFixedBytesArray(marketKeys),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  nominatedOwner3(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner3(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  numMarkets(): BigInt {
    let result = super.call('numMarkets', 'numMarkets():(uint256)', []);

    return result[0].toBigInt();
  }

  try_numMarkets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('numMarkets', 'numMarkets():(uint256)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numMarkets1(proxiedMarkets: boolean): BigInt {
    let result = super.call('numMarkets', 'numMarkets(bool):(uint256)', [
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);

    return result[0].toBigInt();
  }

  try_numMarkets1(proxiedMarkets: boolean): ethereum.CallResult<BigInt> {
    let result = super.tryCall('numMarkets', 'numMarkets(bool):(uint256)', [
      ethereum.Value.fromBoolean(proxiedMarkets),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner3(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner3(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolver3(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver3(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired3(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired3(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  totalDebt(): PerpsV2Proxy__totalDebtResult {
    let result = super.call('totalDebt', 'totalDebt():(uint256,bool)', []);

    return new PerpsV2Proxy__totalDebtResult(result[0].toBigInt(), result[1].toBoolean());
  }

  try_totalDebt(): ethereum.CallResult<PerpsV2Proxy__totalDebtResult> {
    let result = super.tryCall('totalDebt', 'totalDebt():(uint256,bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2Proxy__totalDebtResult(value[0].toBigInt(), value[1].toBoolean())
    );
  }

  isResolverCached4(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached4(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketState3(): Address {
    let result = super.call('marketState', 'marketState():(address)', []);

    return result[0].toAddress();
  }

  try_marketState3(): ethereum.CallResult<Address> {
    let result = super.tryCall('marketState', 'marketState():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messageSender2(): Address {
    let result = super.call('messageSender', 'messageSender():(address)', []);

    return result[0].toAddress();
  }

  try_messageSender2(): ethereum.CallResult<Address> {
    let result = super.tryCall('messageSender', 'messageSender():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner4(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner4(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner4(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner4(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxy2(): Address {
    let result = super.call('proxy', 'proxy():(address)', []);

    return result[0].toAddress();
  }

  try_proxy2(): ethereum.CallResult<Address> {
    let result = super.tryCall('proxy', 'proxy():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolver4(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver4(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired4(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired4(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  isResolverCached5(): boolean {
    let result = super.call('isResolverCached', 'isResolverCached():(bool)', []);

    return result[0].toBoolean();
  }

  try_isResolverCached5(): ethereum.CallResult<boolean> {
    let result = super.tryCall('isResolverCached', 'isResolverCached():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketState4(): Address {
    let result = super.call('marketState', 'marketState():(address)', []);

    return result[0].toAddress();
  }

  try_marketState4(): ethereum.CallResult<Address> {
    let result = super.tryCall('marketState', 'marketState():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messageSender3(): Address {
    let result = super.call('messageSender', 'messageSender():(address)', []);

    return result[0].toAddress();
  }

  try_messageSender3(): ethereum.CallResult<Address> {
    let result = super.tryCall('messageSender', 'messageSender():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner5(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner5(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner5(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner5(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxy3(): Address {
    let result = super.call('proxy', 'proxy():(address)', []);

    return result[0].toAddress();
  }

  try_proxy3(): ethereum.CallResult<Address> {
    let result = super.tryCall('proxy', 'proxy():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolver5(): Address {
    let result = super.call('resolver', 'resolver():(address)', []);

    return result[0].toAddress();
  }

  try_resolver5(): ethereum.CallResult<Address> {
    let result = super.tryCall('resolver', 'resolver():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  resolverAddressesRequired5(): Array<Bytes> {
    let result = super.call(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );

    return result[0].toBytesArray();
  }

  try_resolverAddressesRequired5(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      'resolverAddressesRequired',
      'resolverAddressesRequired():(bytes32[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketState(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class ClosePositionCall extends ethereum.Call {
  get inputs(): ClosePositionCall__Inputs {
    return new ClosePositionCall__Inputs(this);
  }

  get outputs(): ClosePositionCall__Outputs {
    return new ClosePositionCall__Outputs(this);
  }
}

export class ClosePositionCall__Inputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClosePositionCall__Outputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }
}

export class ClosePositionWithTrackingCall extends ethereum.Call {
  get inputs(): ClosePositionWithTrackingCall__Inputs {
    return new ClosePositionWithTrackingCall__Inputs(this);
  }

  get outputs(): ClosePositionWithTrackingCall__Outputs {
    return new ClosePositionWithTrackingCall__Outputs(this);
  }
}

export class ClosePositionWithTrackingCall__Inputs {
  _call: ClosePositionWithTrackingCall;

  constructor(call: ClosePositionWithTrackingCall) {
    this._call = call;
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ClosePositionWithTrackingCall__Outputs {
  _call: ClosePositionWithTrackingCall;

  constructor(call: ClosePositionWithTrackingCall) {
    this._call = call;
  }
}

export class ModifyPositionCall extends ethereum.Call {
  get inputs(): ModifyPositionCall__Inputs {
    return new ModifyPositionCall__Inputs(this);
  }

  get outputs(): ModifyPositionCall__Outputs {
    return new ModifyPositionCall__Outputs(this);
  }
}

export class ModifyPositionCall__Inputs {
  _call: ModifyPositionCall;

  constructor(call: ModifyPositionCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyPositionCall__Outputs {
  _call: ModifyPositionCall;

  constructor(call: ModifyPositionCall) {
    this._call = call;
  }
}

export class ModifyPositionWithTrackingCall extends ethereum.Call {
  get inputs(): ModifyPositionWithTrackingCall__Inputs {
    return new ModifyPositionWithTrackingCall__Inputs(this);
  }

  get outputs(): ModifyPositionWithTrackingCall__Outputs {
    return new ModifyPositionWithTrackingCall__Outputs(this);
  }
}

export class ModifyPositionWithTrackingCall__Inputs {
  _call: ModifyPositionWithTrackingCall;

  constructor(call: ModifyPositionWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ModifyPositionWithTrackingCall__Outputs {
  _call: ModifyPositionWithTrackingCall;

  constructor(call: ModifyPositionWithTrackingCall) {
    this._call = call;
  }
}

export class NominateNewOwnerCall extends ethereum.Call {
  get inputs(): NominateNewOwnerCall__Inputs {
    return new NominateNewOwnerCall__Inputs(this);
  }

  get outputs(): NominateNewOwnerCall__Outputs {
    return new NominateNewOwnerCall__Outputs(this);
  }
}

export class NominateNewOwnerCall__Inputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwnerCall__Outputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }
}

export class RebuildCacheCall extends ethereum.Call {
  get inputs(): RebuildCacheCall__Inputs {
    return new RebuildCacheCall__Inputs(this);
  }

  get outputs(): RebuildCacheCall__Outputs {
    return new RebuildCacheCall__Outputs(this);
  }
}

export class RebuildCacheCall__Inputs {
  _call: RebuildCacheCall;

  constructor(call: RebuildCacheCall) {
    this._call = call;
  }
}

export class RebuildCacheCall__Outputs {
  _call: RebuildCacheCall;

  constructor(call: RebuildCacheCall) {
    this._call = call;
  }
}

export class RecomputeFundingCall extends ethereum.Call {
  get inputs(): RecomputeFundingCall__Inputs {
    return new RecomputeFundingCall__Inputs(this);
  }

  get outputs(): RecomputeFundingCall__Outputs {
    return new RecomputeFundingCall__Outputs(this);
  }
}

export class RecomputeFundingCall__Inputs {
  _call: RecomputeFundingCall;

  constructor(call: RecomputeFundingCall) {
    this._call = call;
  }
}

export class RecomputeFundingCall__Outputs {
  _call: RecomputeFundingCall;

  constructor(call: RecomputeFundingCall) {
    this._call = call;
  }

  get lastIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetMessageSenderCall extends ethereum.Call {
  get inputs(): SetMessageSenderCall__Inputs {
    return new SetMessageSenderCall__Inputs(this);
  }

  get outputs(): SetMessageSenderCall__Outputs {
    return new SetMessageSenderCall__Outputs(this);
  }
}

export class SetMessageSenderCall__Inputs {
  _call: SetMessageSenderCall;

  constructor(call: SetMessageSenderCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessageSenderCall__Outputs {
  _call: SetMessageSenderCall;

  constructor(call: SetMessageSenderCall) {
    this._call = call;
  }
}

export class SetProxyCall extends ethereum.Call {
  get inputs(): SetProxyCall__Inputs {
    return new SetProxyCall__Inputs(this);
  }

  get outputs(): SetProxyCall__Outputs {
    return new SetProxyCall__Outputs(this);
  }
}

export class SetProxyCall__Inputs {
  _call: SetProxyCall;

  constructor(call: SetProxyCall) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProxyCall__Outputs {
  _call: SetProxyCall;

  constructor(call: SetProxyCall) {
    this._call = call;
  }
}

export class TransferMarginCall extends ethereum.Call {
  get inputs(): TransferMarginCall__Inputs {
    return new TransferMarginCall__Inputs(this);
  }

  get outputs(): TransferMarginCall__Outputs {
    return new TransferMarginCall__Outputs(this);
  }
}

export class TransferMarginCall__Inputs {
  _call: TransferMarginCall;

  constructor(call: TransferMarginCall) {
    this._call = call;
  }

  get marginDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TransferMarginCall__Outputs {
  _call: TransferMarginCall;

  constructor(call: TransferMarginCall) {
    this._call = call;
  }
}

export class WithdrawAllMarginCall extends ethereum.Call {
  get inputs(): WithdrawAllMarginCall__Inputs {
    return new WithdrawAllMarginCall__Inputs(this);
  }

  get outputs(): WithdrawAllMarginCall__Outputs {
    return new WithdrawAllMarginCall__Outputs(this);
  }
}

export class WithdrawAllMarginCall__Inputs {
  _call: WithdrawAllMarginCall;

  constructor(call: WithdrawAllMarginCall) {
    this._call = call;
  }
}

export class WithdrawAllMarginCall__Outputs {
  _call: WithdrawAllMarginCall;

  constructor(call: WithdrawAllMarginCall) {
    this._call = call;
  }
}

export class Constructor1Call extends ethereum.Call {
  get inputs(): Constructor1Call__Inputs {
    return new Constructor1Call__Inputs(this);
  }

  get outputs(): Constructor1Call__Outputs {
    return new Constructor1Call__Outputs(this);
  }
}

export class Constructor1Call__Inputs {
  _call: Constructor1Call;

  constructor(call: Constructor1Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketState(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Constructor1Call__Outputs {
  _call: Constructor1Call;

  constructor(call: Constructor1Call) {
    this._call = call;
  }
}

export class AcceptOwnership1Call extends ethereum.Call {
  get inputs(): AcceptOwnership1Call__Inputs {
    return new AcceptOwnership1Call__Inputs(this);
  }

  get outputs(): AcceptOwnership1Call__Outputs {
    return new AcceptOwnership1Call__Outputs(this);
  }
}

export class AcceptOwnership1Call__Inputs {
  _call: AcceptOwnership1Call;

  constructor(call: AcceptOwnership1Call) {
    this._call = call;
  }
}

export class AcceptOwnership1Call__Outputs {
  _call: AcceptOwnership1Call;

  constructor(call: AcceptOwnership1Call) {
    this._call = call;
  }
}

export class CancelDelayedOrderCall extends ethereum.Call {
  get inputs(): CancelDelayedOrderCall__Inputs {
    return new CancelDelayedOrderCall__Inputs(this);
  }

  get outputs(): CancelDelayedOrderCall__Outputs {
    return new CancelDelayedOrderCall__Outputs(this);
  }
}

export class CancelDelayedOrderCall__Inputs {
  _call: CancelDelayedOrderCall;

  constructor(call: CancelDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelDelayedOrderCall__Outputs {
  _call: CancelDelayedOrderCall;

  constructor(call: CancelDelayedOrderCall) {
    this._call = call;
  }
}

export class CancelOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): CancelOffchainDelayedOrderCall__Inputs {
    return new CancelOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): CancelOffchainDelayedOrderCall__Outputs {
    return new CancelOffchainDelayedOrderCall__Outputs(this);
  }
}

export class CancelOffchainDelayedOrderCall__Inputs {
  _call: CancelOffchainDelayedOrderCall;

  constructor(call: CancelOffchainDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelOffchainDelayedOrderCall__Outputs {
  _call: CancelOffchainDelayedOrderCall;

  constructor(call: CancelOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class ExecuteDelayedOrderCall extends ethereum.Call {
  get inputs(): ExecuteDelayedOrderCall__Inputs {
    return new ExecuteDelayedOrderCall__Inputs(this);
  }

  get outputs(): ExecuteDelayedOrderCall__Outputs {
    return new ExecuteDelayedOrderCall__Outputs(this);
  }
}

export class ExecuteDelayedOrderCall__Inputs {
  _call: ExecuteDelayedOrderCall;

  constructor(call: ExecuteDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExecuteDelayedOrderCall__Outputs {
  _call: ExecuteDelayedOrderCall;

  constructor(call: ExecuteDelayedOrderCall) {
    this._call = call;
  }
}

export class ExecuteOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): ExecuteOffchainDelayedOrderCall__Inputs {
    return new ExecuteOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): ExecuteOffchainDelayedOrderCall__Outputs {
    return new ExecuteOffchainDelayedOrderCall__Outputs(this);
  }
}

export class ExecuteOffchainDelayedOrderCall__Inputs {
  _call: ExecuteOffchainDelayedOrderCall;

  constructor(call: ExecuteOffchainDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get priceUpdateData(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class ExecuteOffchainDelayedOrderCall__Outputs {
  _call: ExecuteOffchainDelayedOrderCall;

  constructor(call: ExecuteOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class NominateNewOwner1Call extends ethereum.Call {
  get inputs(): NominateNewOwner1Call__Inputs {
    return new NominateNewOwner1Call__Inputs(this);
  }

  get outputs(): NominateNewOwner1Call__Outputs {
    return new NominateNewOwner1Call__Outputs(this);
  }
}

export class NominateNewOwner1Call__Inputs {
  _call: NominateNewOwner1Call;

  constructor(call: NominateNewOwner1Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwner1Call__Outputs {
  _call: NominateNewOwner1Call;

  constructor(call: NominateNewOwner1Call) {
    this._call = call;
  }
}

export class RebuildCache1Call extends ethereum.Call {
  get inputs(): RebuildCache1Call__Inputs {
    return new RebuildCache1Call__Inputs(this);
  }

  get outputs(): RebuildCache1Call__Outputs {
    return new RebuildCache1Call__Outputs(this);
  }
}

export class RebuildCache1Call__Inputs {
  _call: RebuildCache1Call;

  constructor(call: RebuildCache1Call) {
    this._call = call;
  }
}

export class RebuildCache1Call__Outputs {
  _call: RebuildCache1Call;

  constructor(call: RebuildCache1Call) {
    this._call = call;
  }
}

export class SetMessageSender1Call extends ethereum.Call {
  get inputs(): SetMessageSender1Call__Inputs {
    return new SetMessageSender1Call__Inputs(this);
  }

  get outputs(): SetMessageSender1Call__Outputs {
    return new SetMessageSender1Call__Outputs(this);
  }
}

export class SetMessageSender1Call__Inputs {
  _call: SetMessageSender1Call;

  constructor(call: SetMessageSender1Call) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessageSender1Call__Outputs {
  _call: SetMessageSender1Call;

  constructor(call: SetMessageSender1Call) {
    this._call = call;
  }
}

export class SetProxy1Call extends ethereum.Call {
  get inputs(): SetProxy1Call__Inputs {
    return new SetProxy1Call__Inputs(this);
  }

  get outputs(): SetProxy1Call__Outputs {
    return new SetProxy1Call__Outputs(this);
  }
}

export class SetProxy1Call__Inputs {
  _call: SetProxy1Call;

  constructor(call: SetProxy1Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProxy1Call__Outputs {
  _call: SetProxy1Call;

  constructor(call: SetProxy1Call) {
    this._call = call;
  }
}

export class Constructor2Call extends ethereum.Call {
  get inputs(): Constructor2Call__Inputs {
    return new Constructor2Call__Inputs(this);
  }

  get outputs(): Constructor2Call__Outputs {
    return new Constructor2Call__Outputs(this);
  }
}

export class Constructor2Call__Inputs {
  _call: Constructor2Call;

  constructor(call: Constructor2Call) {
    this._call = call;
  }

  get _marketState(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Constructor2Call__Outputs {
  _call: Constructor2Call;

  constructor(call: Constructor2Call) {
    this._call = call;
  }
}

export class AcceptOwnership2Call extends ethereum.Call {
  get inputs(): AcceptOwnership2Call__Inputs {
    return new AcceptOwnership2Call__Inputs(this);
  }

  get outputs(): AcceptOwnership2Call__Outputs {
    return new AcceptOwnership2Call__Outputs(this);
  }
}

export class AcceptOwnership2Call__Inputs {
  _call: AcceptOwnership2Call;

  constructor(call: AcceptOwnership2Call) {
    this._call = call;
  }
}

export class AcceptOwnership2Call__Outputs {
  _call: AcceptOwnership2Call;

  constructor(call: AcceptOwnership2Call) {
    this._call = call;
  }
}

export class NominateNewOwner2Call extends ethereum.Call {
  get inputs(): NominateNewOwner2Call__Inputs {
    return new NominateNewOwner2Call__Inputs(this);
  }

  get outputs(): NominateNewOwner2Call__Outputs {
    return new NominateNewOwner2Call__Outputs(this);
  }
}

export class NominateNewOwner2Call__Inputs {
  _call: NominateNewOwner2Call;

  constructor(call: NominateNewOwner2Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwner2Call__Outputs {
  _call: NominateNewOwner2Call;

  constructor(call: NominateNewOwner2Call) {
    this._call = call;
  }
}

export class RebuildCache2Call extends ethereum.Call {
  get inputs(): RebuildCache2Call__Inputs {
    return new RebuildCache2Call__Inputs(this);
  }

  get outputs(): RebuildCache2Call__Outputs {
    return new RebuildCache2Call__Outputs(this);
  }
}

export class RebuildCache2Call__Inputs {
  _call: RebuildCache2Call;

  constructor(call: RebuildCache2Call) {
    this._call = call;
  }
}

export class RebuildCache2Call__Outputs {
  _call: RebuildCache2Call;

  constructor(call: RebuildCache2Call) {
    this._call = call;
  }
}

export class Constructor3Call extends ethereum.Call {
  get inputs(): Constructor3Call__Inputs {
    return new Constructor3Call__Inputs(this);
  }

  get outputs(): Constructor3Call__Outputs {
    return new Constructor3Call__Outputs(this);
  }
}

export class Constructor3Call__Inputs {
  _call: Constructor3Call;

  constructor(call: Constructor3Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class Constructor3Call__Outputs {
  _call: Constructor3Call;

  constructor(call: Constructor3Call) {
    this._call = call;
  }
}

export class AcceptOwnership3Call extends ethereum.Call {
  get inputs(): AcceptOwnership3Call__Inputs {
    return new AcceptOwnership3Call__Inputs(this);
  }

  get outputs(): AcceptOwnership3Call__Outputs {
    return new AcceptOwnership3Call__Outputs(this);
  }
}

export class AcceptOwnership3Call__Inputs {
  _call: AcceptOwnership3Call;

  constructor(call: AcceptOwnership3Call) {
    this._call = call;
  }
}

export class AcceptOwnership3Call__Outputs {
  _call: AcceptOwnership3Call;

  constructor(call: AcceptOwnership3Call) {
    this._call = call;
  }
}

export class AddEndorsedAddressesCall extends ethereum.Call {
  get inputs(): AddEndorsedAddressesCall__Inputs {
    return new AddEndorsedAddressesCall__Inputs(this);
  }

  get outputs(): AddEndorsedAddressesCall__Outputs {
    return new AddEndorsedAddressesCall__Outputs(this);
  }
}

export class AddEndorsedAddressesCall__Inputs {
  _call: AddEndorsedAddressesCall;

  constructor(call: AddEndorsedAddressesCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddEndorsedAddressesCall__Outputs {
  _call: AddEndorsedAddressesCall;

  constructor(call: AddEndorsedAddressesCall) {
    this._call = call;
  }
}

export class AddMarketsCall extends ethereum.Call {
  get inputs(): AddMarketsCall__Inputs {
    return new AddMarketsCall__Inputs(this);
  }

  get outputs(): AddMarketsCall__Outputs {
    return new AddMarketsCall__Outputs(this);
  }
}

export class AddMarketsCall__Inputs {
  _call: AddMarketsCall;

  constructor(call: AddMarketsCall) {
    this._call = call;
  }

  get marketsToAdd(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddMarketsCall__Outputs {
  _call: AddMarketsCall;

  constructor(call: AddMarketsCall) {
    this._call = call;
  }
}

export class AddProxiedMarketsCall extends ethereum.Call {
  get inputs(): AddProxiedMarketsCall__Inputs {
    return new AddProxiedMarketsCall__Inputs(this);
  }

  get outputs(): AddProxiedMarketsCall__Outputs {
    return new AddProxiedMarketsCall__Outputs(this);
  }
}

export class AddProxiedMarketsCall__Inputs {
  _call: AddProxiedMarketsCall;

  constructor(call: AddProxiedMarketsCall) {
    this._call = call;
  }

  get marketsToAdd(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddProxiedMarketsCall__Outputs {
  _call: AddProxiedMarketsCall;

  constructor(call: AddProxiedMarketsCall) {
    this._call = call;
  }
}

export class BurnSUSDCall extends ethereum.Call {
  get inputs(): BurnSUSDCall__Inputs {
    return new BurnSUSDCall__Inputs(this);
  }

  get outputs(): BurnSUSDCall__Outputs {
    return new BurnSUSDCall__Outputs(this);
  }
}

export class BurnSUSDCall__Inputs {
  _call: BurnSUSDCall;

  constructor(call: BurnSUSDCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnSUSDCall__Outputs {
  _call: BurnSUSDCall;

  constructor(call: BurnSUSDCall) {
    this._call = call;
  }

  get postReclamationAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class IssueSUSDCall extends ethereum.Call {
  get inputs(): IssueSUSDCall__Inputs {
    return new IssueSUSDCall__Inputs(this);
  }

  get outputs(): IssueSUSDCall__Outputs {
    return new IssueSUSDCall__Outputs(this);
  }
}

export class IssueSUSDCall__Inputs {
  _call: IssueSUSDCall;

  constructor(call: IssueSUSDCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IssueSUSDCall__Outputs {
  _call: IssueSUSDCall;

  constructor(call: IssueSUSDCall) {
    this._call = call;
  }
}

export class NominateNewOwner3Call extends ethereum.Call {
  get inputs(): NominateNewOwner3Call__Inputs {
    return new NominateNewOwner3Call__Inputs(this);
  }

  get outputs(): NominateNewOwner3Call__Outputs {
    return new NominateNewOwner3Call__Outputs(this);
  }
}

export class NominateNewOwner3Call__Inputs {
  _call: NominateNewOwner3Call;

  constructor(call: NominateNewOwner3Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwner3Call__Outputs {
  _call: NominateNewOwner3Call;

  constructor(call: NominateNewOwner3Call) {
    this._call = call;
  }
}

export class PayFeeCall extends ethereum.Call {
  get inputs(): PayFeeCall__Inputs {
    return new PayFeeCall__Inputs(this);
  }

  get outputs(): PayFeeCall__Outputs {
    return new PayFeeCall__Outputs(this);
  }
}

export class PayFeeCall__Inputs {
  _call: PayFeeCall;

  constructor(call: PayFeeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class PayFeeCall__Outputs {
  _call: PayFeeCall;

  constructor(call: PayFeeCall) {
    this._call = call;
  }
}

export class PayFee1Call extends ethereum.Call {
  get inputs(): PayFee1Call__Inputs {
    return new PayFee1Call__Inputs(this);
  }

  get outputs(): PayFee1Call__Outputs {
    return new PayFee1Call__Outputs(this);
  }
}

export class PayFee1Call__Inputs {
  _call: PayFee1Call;

  constructor(call: PayFee1Call) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayFee1Call__Outputs {
  _call: PayFee1Call;

  constructor(call: PayFee1Call) {
    this._call = call;
  }
}

export class RebuildCache3Call extends ethereum.Call {
  get inputs(): RebuildCache3Call__Inputs {
    return new RebuildCache3Call__Inputs(this);
  }

  get outputs(): RebuildCache3Call__Outputs {
    return new RebuildCache3Call__Outputs(this);
  }
}

export class RebuildCache3Call__Inputs {
  _call: RebuildCache3Call;

  constructor(call: RebuildCache3Call) {
    this._call = call;
  }
}

export class RebuildCache3Call__Outputs {
  _call: RebuildCache3Call;

  constructor(call: RebuildCache3Call) {
    this._call = call;
  }
}

export class RemoveEndorsedAddressesCall extends ethereum.Call {
  get inputs(): RemoveEndorsedAddressesCall__Inputs {
    return new RemoveEndorsedAddressesCall__Inputs(this);
  }

  get outputs(): RemoveEndorsedAddressesCall__Outputs {
    return new RemoveEndorsedAddressesCall__Outputs(this);
  }
}

export class RemoveEndorsedAddressesCall__Inputs {
  _call: RemoveEndorsedAddressesCall;

  constructor(call: RemoveEndorsedAddressesCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveEndorsedAddressesCall__Outputs {
  _call: RemoveEndorsedAddressesCall;

  constructor(call: RemoveEndorsedAddressesCall) {
    this._call = call;
  }
}

export class RemoveMarketsCall extends ethereum.Call {
  get inputs(): RemoveMarketsCall__Inputs {
    return new RemoveMarketsCall__Inputs(this);
  }

  get outputs(): RemoveMarketsCall__Outputs {
    return new RemoveMarketsCall__Outputs(this);
  }
}

export class RemoveMarketsCall__Inputs {
  _call: RemoveMarketsCall;

  constructor(call: RemoveMarketsCall) {
    this._call = call;
  }

  get marketsToRemove(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveMarketsCall__Outputs {
  _call: RemoveMarketsCall;

  constructor(call: RemoveMarketsCall) {
    this._call = call;
  }
}

export class RemoveMarketsByKeyCall extends ethereum.Call {
  get inputs(): RemoveMarketsByKeyCall__Inputs {
    return new RemoveMarketsByKeyCall__Inputs(this);
  }

  get outputs(): RemoveMarketsByKeyCall__Outputs {
    return new RemoveMarketsByKeyCall__Outputs(this);
  }
}

export class RemoveMarketsByKeyCall__Inputs {
  _call: RemoveMarketsByKeyCall;

  constructor(call: RemoveMarketsByKeyCall) {
    this._call = call;
  }

  get marketKeysToRemove(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class RemoveMarketsByKeyCall__Outputs {
  _call: RemoveMarketsByKeyCall;

  constructor(call: RemoveMarketsByKeyCall) {
    this._call = call;
  }
}

export class UpdateMarketsImplementationsCall extends ethereum.Call {
  get inputs(): UpdateMarketsImplementationsCall__Inputs {
    return new UpdateMarketsImplementationsCall__Inputs(this);
  }

  get outputs(): UpdateMarketsImplementationsCall__Outputs {
    return new UpdateMarketsImplementationsCall__Outputs(this);
  }
}

export class UpdateMarketsImplementationsCall__Inputs {
  _call: UpdateMarketsImplementationsCall;

  constructor(call: UpdateMarketsImplementationsCall) {
    this._call = call;
  }

  get marketsToUpdate(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class UpdateMarketsImplementationsCall__Outputs {
  _call: UpdateMarketsImplementationsCall;

  constructor(call: UpdateMarketsImplementationsCall) {
    this._call = call;
  }
}

export class Constructor4Call extends ethereum.Call {
  get inputs(): Constructor4Call__Inputs {
    return new Constructor4Call__Inputs(this);
  }

  get outputs(): Constructor4Call__Outputs {
    return new Constructor4Call__Outputs(this);
  }
}

export class Constructor4Call__Inputs {
  _call: Constructor4Call;

  constructor(call: Constructor4Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketState(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Constructor4Call__Outputs {
  _call: Constructor4Call;

  constructor(call: Constructor4Call) {
    this._call = call;
  }
}

export class AcceptOwnership4Call extends ethereum.Call {
  get inputs(): AcceptOwnership4Call__Inputs {
    return new AcceptOwnership4Call__Inputs(this);
  }

  get outputs(): AcceptOwnership4Call__Outputs {
    return new AcceptOwnership4Call__Outputs(this);
  }
}

export class AcceptOwnership4Call__Inputs {
  _call: AcceptOwnership4Call;

  constructor(call: AcceptOwnership4Call) {
    this._call = call;
  }
}

export class AcceptOwnership4Call__Outputs {
  _call: AcceptOwnership4Call;

  constructor(call: AcceptOwnership4Call) {
    this._call = call;
  }
}

export class NominateNewOwner4Call extends ethereum.Call {
  get inputs(): NominateNewOwner4Call__Inputs {
    return new NominateNewOwner4Call__Inputs(this);
  }

  get outputs(): NominateNewOwner4Call__Outputs {
    return new NominateNewOwner4Call__Outputs(this);
  }
}

export class NominateNewOwner4Call__Inputs {
  _call: NominateNewOwner4Call;

  constructor(call: NominateNewOwner4Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwner4Call__Outputs {
  _call: NominateNewOwner4Call;

  constructor(call: NominateNewOwner4Call) {
    this._call = call;
  }
}

export class RebuildCache4Call extends ethereum.Call {
  get inputs(): RebuildCache4Call__Inputs {
    return new RebuildCache4Call__Inputs(this);
  }

  get outputs(): RebuildCache4Call__Outputs {
    return new RebuildCache4Call__Outputs(this);
  }
}

export class RebuildCache4Call__Inputs {
  _call: RebuildCache4Call;

  constructor(call: RebuildCache4Call) {
    this._call = call;
  }
}

export class RebuildCache4Call__Outputs {
  _call: RebuildCache4Call;

  constructor(call: RebuildCache4Call) {
    this._call = call;
  }
}

export class SetMessageSender2Call extends ethereum.Call {
  get inputs(): SetMessageSender2Call__Inputs {
    return new SetMessageSender2Call__Inputs(this);
  }

  get outputs(): SetMessageSender2Call__Outputs {
    return new SetMessageSender2Call__Outputs(this);
  }
}

export class SetMessageSender2Call__Inputs {
  _call: SetMessageSender2Call;

  constructor(call: SetMessageSender2Call) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessageSender2Call__Outputs {
  _call: SetMessageSender2Call;

  constructor(call: SetMessageSender2Call) {
    this._call = call;
  }
}

export class SetProxy2Call extends ethereum.Call {
  get inputs(): SetProxy2Call__Inputs {
    return new SetProxy2Call__Inputs(this);
  }

  get outputs(): SetProxy2Call__Outputs {
    return new SetProxy2Call__Outputs(this);
  }
}

export class SetProxy2Call__Inputs {
  _call: SetProxy2Call;

  constructor(call: SetProxy2Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProxy2Call__Outputs {
  _call: SetProxy2Call;

  constructor(call: SetProxy2Call) {
    this._call = call;
  }
}

export class SubmitCloseDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitCloseDelayedOrderWithTrackingCall__Inputs {
    return new SubmitCloseDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitCloseDelayedOrderWithTrackingCall__Outputs {
    return new SubmitCloseDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitCloseDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitCloseDelayedOrderWithTrackingCall;

  constructor(call: SubmitCloseDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get desiredTimeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitCloseDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitCloseDelayedOrderWithTrackingCall;

  constructor(call: SubmitCloseDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class SubmitCloseOffchainDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitCloseOffchainDelayedOrderWithTrackingCall__Inputs {
    return new SubmitCloseOffchainDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitCloseOffchainDelayedOrderWithTrackingCall__Outputs {
    return new SubmitCloseOffchainDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitCloseOffchainDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitCloseOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitCloseOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SubmitCloseOffchainDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitCloseOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitCloseOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class SubmitDelayedOrderCall extends ethereum.Call {
  get inputs(): SubmitDelayedOrderCall__Inputs {
    return new SubmitDelayedOrderCall__Inputs(this);
  }

  get outputs(): SubmitDelayedOrderCall__Outputs {
    return new SubmitDelayedOrderCall__Outputs(this);
  }
}

export class SubmitDelayedOrderCall__Inputs {
  _call: SubmitDelayedOrderCall;

  constructor(call: SubmitDelayedOrderCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredTimeDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SubmitDelayedOrderCall__Outputs {
  _call: SubmitDelayedOrderCall;

  constructor(call: SubmitDelayedOrderCall) {
    this._call = call;
  }
}

export class SubmitDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitDelayedOrderWithTrackingCall__Inputs {
    return new SubmitDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitDelayedOrderWithTrackingCall__Outputs {
    return new SubmitDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitDelayedOrderWithTrackingCall;

  constructor(call: SubmitDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredTimeDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SubmitDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitDelayedOrderWithTrackingCall;

  constructor(call: SubmitDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class SubmitOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): SubmitOffchainDelayedOrderCall__Inputs {
    return new SubmitOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): SubmitOffchainDelayedOrderCall__Outputs {
    return new SubmitOffchainDelayedOrderCall__Outputs(this);
  }
}

export class SubmitOffchainDelayedOrderCall__Inputs {
  _call: SubmitOffchainDelayedOrderCall;

  constructor(call: SubmitOffchainDelayedOrderCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubmitOffchainDelayedOrderCall__Outputs {
  _call: SubmitOffchainDelayedOrderCall;

  constructor(call: SubmitOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitOffchainDelayedOrderWithTrackingCall__Inputs {
    return new SubmitOffchainDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitOffchainDelayedOrderWithTrackingCall__Outputs {
    return new SubmitOffchainDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get desiredFillPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class Constructor5Call extends ethereum.Call {
  get inputs(): Constructor5Call__Inputs {
    return new Constructor5Call__Inputs(this);
  }

  get outputs(): Constructor5Call__Outputs {
    return new Constructor5Call__Outputs(this);
  }
}

export class Constructor5Call__Inputs {
  _call: Constructor5Call;

  constructor(call: Constructor5Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketState(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _resolver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Constructor5Call__Outputs {
  _call: Constructor5Call;

  constructor(call: Constructor5Call) {
    this._call = call;
  }
}

export class AcceptOwnership5Call extends ethereum.Call {
  get inputs(): AcceptOwnership5Call__Inputs {
    return new AcceptOwnership5Call__Inputs(this);
  }

  get outputs(): AcceptOwnership5Call__Outputs {
    return new AcceptOwnership5Call__Outputs(this);
  }
}

export class AcceptOwnership5Call__Inputs {
  _call: AcceptOwnership5Call;

  constructor(call: AcceptOwnership5Call) {
    this._call = call;
  }
}

export class AcceptOwnership5Call__Outputs {
  _call: AcceptOwnership5Call;

  constructor(call: AcceptOwnership5Call) {
    this._call = call;
  }
}

export class FlagPositionCall extends ethereum.Call {
  get inputs(): FlagPositionCall__Inputs {
    return new FlagPositionCall__Inputs(this);
  }

  get outputs(): FlagPositionCall__Outputs {
    return new FlagPositionCall__Outputs(this);
  }
}

export class FlagPositionCall__Inputs {
  _call: FlagPositionCall;

  constructor(call: FlagPositionCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FlagPositionCall__Outputs {
  _call: FlagPositionCall;

  constructor(call: FlagPositionCall) {
    this._call = call;
  }
}

export class ForceLiquidatePositionCall extends ethereum.Call {
  get inputs(): ForceLiquidatePositionCall__Inputs {
    return new ForceLiquidatePositionCall__Inputs(this);
  }

  get outputs(): ForceLiquidatePositionCall__Outputs {
    return new ForceLiquidatePositionCall__Outputs(this);
  }
}

export class ForceLiquidatePositionCall__Inputs {
  _call: ForceLiquidatePositionCall;

  constructor(call: ForceLiquidatePositionCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ForceLiquidatePositionCall__Outputs {
  _call: ForceLiquidatePositionCall;

  constructor(call: ForceLiquidatePositionCall) {
    this._call = call;
  }
}

export class LiquidatePositionCall extends ethereum.Call {
  get inputs(): LiquidatePositionCall__Inputs {
    return new LiquidatePositionCall__Inputs(this);
  }

  get outputs(): LiquidatePositionCall__Outputs {
    return new LiquidatePositionCall__Outputs(this);
  }
}

export class LiquidatePositionCall__Inputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LiquidatePositionCall__Outputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }
}

export class NominateNewOwner5Call extends ethereum.Call {
  get inputs(): NominateNewOwner5Call__Inputs {
    return new NominateNewOwner5Call__Inputs(this);
  }

  get outputs(): NominateNewOwner5Call__Outputs {
    return new NominateNewOwner5Call__Outputs(this);
  }
}

export class NominateNewOwner5Call__Inputs {
  _call: NominateNewOwner5Call;

  constructor(call: NominateNewOwner5Call) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwner5Call__Outputs {
  _call: NominateNewOwner5Call;

  constructor(call: NominateNewOwner5Call) {
    this._call = call;
  }
}

export class RebuildCache5Call extends ethereum.Call {
  get inputs(): RebuildCache5Call__Inputs {
    return new RebuildCache5Call__Inputs(this);
  }

  get outputs(): RebuildCache5Call__Outputs {
    return new RebuildCache5Call__Outputs(this);
  }
}

export class RebuildCache5Call__Inputs {
  _call: RebuildCache5Call;

  constructor(call: RebuildCache5Call) {
    this._call = call;
  }
}

export class RebuildCache5Call__Outputs {
  _call: RebuildCache5Call;

  constructor(call: RebuildCache5Call) {
    this._call = call;
  }
}

export class SetMessageSender3Call extends ethereum.Call {
  get inputs(): SetMessageSender3Call__Inputs {
    return new SetMessageSender3Call__Inputs(this);
  }

  get outputs(): SetMessageSender3Call__Outputs {
    return new SetMessageSender3Call__Outputs(this);
  }
}

export class SetMessageSender3Call__Inputs {
  _call: SetMessageSender3Call;

  constructor(call: SetMessageSender3Call) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessageSender3Call__Outputs {
  _call: SetMessageSender3Call;

  constructor(call: SetMessageSender3Call) {
    this._call = call;
  }
}

export class SetProxy3Call extends ethereum.Call {
  get inputs(): SetProxy3Call__Inputs {
    return new SetProxy3Call__Inputs(this);
  }

  get outputs(): SetProxy3Call__Outputs {
    return new SetProxy3Call__Outputs(this);
  }
}

export class SetProxy3Call__Inputs {
  _call: SetProxy3Call;

  constructor(call: SetProxy3Call) {
    this._call = call;
  }

  get _proxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetProxy3Call__Outputs {
  _call: SetProxy3Call;

  constructor(call: SetProxy3Call) {
    this._call = call;
  }
}
