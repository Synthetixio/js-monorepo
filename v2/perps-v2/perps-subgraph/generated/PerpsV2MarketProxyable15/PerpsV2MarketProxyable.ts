// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DelayedOrderRemoved extends ethereum.Event {
  get params(): DelayedOrderRemoved__Params {
    return new DelayedOrderRemoved__Params(this);
  }
}

export class DelayedOrderRemoved__Params {
  _event: DelayedOrderRemoved;

  constructor(event: DelayedOrderRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isOffchain(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get currentRoundId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get targetRoundId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get commitDeposit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get keeperDeposit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class DelayedOrderSubmitted extends ethereum.Event {
  get params(): DelayedOrderSubmitted__Params {
    return new DelayedOrderSubmitted__Params(this);
  }
}

export class DelayedOrderSubmitted__Params {
  _event: DelayedOrderSubmitted;

  constructor(event: DelayedOrderSubmitted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isOffchain(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get targetRoundId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get intentionTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get executableAtTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get commitDeposit(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get keeperDeposit(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class FundingRecomputed extends ethereum.Event {
  get params(): FundingRecomputed__Params {
    return new FundingRecomputed__Params(this);
  }
}

export class FundingRecomputed__Params {
  _event: FundingRecomputed;

  constructor(event: FundingRecomputed) {
    this._event = event;
  }

  get funding(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class MarginTransferred extends ethereum.Event {
  get params(): MarginTransferred__Params {
    return new MarginTransferred__Params(this);
  }
}

export class MarginTransferred__Params {
  _event: MarginTransferred;

  constructor(event: MarginTransferred) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marginDelta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PerpsTracking extends ethereum.Event {
  get params(): PerpsTracking__Params {
    return new PerpsTracking__Params(this);
  }
}

export class PerpsTracking__Params {
  _event: PerpsTracking;

  constructor(event: PerpsTracking) {
    this._event = event;
  }

  get trackingCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get baseAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get marketKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PositionLiquidated extends ethereum.Event {
  get params(): PositionLiquidated__Params {
    return new PositionLiquidated__Params(this);
  }
}

export class PositionLiquidated__Params {
  _event: PositionLiquidated;

  constructor(event: PositionLiquidated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class PositionModified extends ethereum.Event {
  get params(): PositionModified__Params {
    return new PositionModified__Params(this);
  }
}

export class PositionModified__Params {
  _event: PositionModified;

  constructor(event: PositionModified) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get margin(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradeSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lastPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class PerpsV2MarketProxyable__accessibleMarginResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getMarginAccessible(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__accruedFundingResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getFunding(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__assetPriceResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__delayedOrdersResultValue0Struct extends ethereum.Tuple {
  get isOffchain(): boolean {
    return this[0].toBoolean();
  }

  get sizeDelta(): BigInt {
    return this[1].toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this[2].toBigInt();
  }

  get targetRoundId(): BigInt {
    return this[3].toBigInt();
  }

  get commitDeposit(): BigInt {
    return this[4].toBigInt();
  }

  get keeperDeposit(): BigInt {
    return this[5].toBigInt();
  }

  get executableAtTime(): BigInt {
    return this[6].toBigInt();
  }

  get intentionTime(): BigInt {
    return this[7].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[8].toBytes();
  }
}

export class PerpsV2MarketProxyable__liquidationPriceResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__marketDebtResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getDebt(): BigInt {
    return this.value0;
  }

  getIsInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__marketSizesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getLong(): BigInt {
    return this.value0;
  }

  getShort(): BigInt {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__notionalValueResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__orderFeeResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getFee(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__positionsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get lastFundingIndex(): BigInt {
    return this[1].toBigInt();
  }

  get margin(): BigInt {
    return this[2].toBigInt();
  }

  get lastPrice(): BigInt {
    return this[3].toBigInt();
  }

  get size(): BigInt {
    return this[4].toBigInt();
  }
}

export class PerpsV2MarketProxyable__postTradeDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromSignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    return map;
  }

  getMargin(): BigInt {
    return this.value0;
  }

  getSize(): BigInt {
    return this.value1;
  }

  getPrice(): BigInt {
    return this.value2;
  }

  getLiqPrice(): BigInt {
    return this.value3;
  }

  getFee(): BigInt {
    return this.value4;
  }

  getStatus(): i32 {
    return this.value5;
  }
}

export class PerpsV2MarketProxyable__profitLossResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getPnl(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__remainingMarginResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getMarginRemaining(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable__unrecordedFundingResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getFunding(): BigInt {
    return this.value0;
  }

  getInvalid(): boolean {
    return this.value1;
  }
}

export class PerpsV2MarketProxyable extends ethereum.SmartContract {
  static bind(address: Address): PerpsV2MarketProxyable {
    return new PerpsV2MarketProxyable("PerpsV2MarketProxyable", address);
  }

  accessibleMargin(
    account: Address
  ): PerpsV2MarketProxyable__accessibleMarginResult {
    let result = super.call(
      "accessibleMargin",
      "accessibleMargin(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return new PerpsV2MarketProxyable__accessibleMarginResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_accessibleMargin(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__accessibleMarginResult> {
    let result = super.tryCall(
      "accessibleMargin",
      "accessibleMargin(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__accessibleMarginResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  accruedFunding(
    account: Address
  ): PerpsV2MarketProxyable__accruedFundingResult {
    let result = super.call(
      "accruedFunding",
      "accruedFunding(address):(int256,bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return new PerpsV2MarketProxyable__accruedFundingResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_accruedFunding(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__accruedFundingResult> {
    let result = super.tryCall(
      "accruedFunding",
      "accruedFunding(address):(int256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__accruedFundingResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  assetPrice(): PerpsV2MarketProxyable__assetPriceResult {
    let result = super.call("assetPrice", "assetPrice():(uint256,bool)", []);

    return new PerpsV2MarketProxyable__assetPriceResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_assetPrice(): ethereum.CallResult<
    PerpsV2MarketProxyable__assetPriceResult
  > {
    let result = super.tryCall("assetPrice", "assetPrice():(uint256,bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__assetPriceResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  baseAsset(): Bytes {
    let result = super.call("baseAsset", "baseAsset():(bytes32)", []);

    return result[0].toBytes();
  }

  try_baseAsset(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("baseAsset", "baseAsset():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canLiquidate(account: Address): boolean {
    let result = super.call("canLiquidate", "canLiquidate(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_canLiquidate(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("canLiquidate", "canLiquidate(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  currentFundingRate(): BigInt {
    let result = super.call(
      "currentFundingRate",
      "currentFundingRate():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentFundingRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentFundingRate",
      "currentFundingRate():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentFundingVelocity(): BigInt {
    let result = super.call(
      "currentFundingVelocity",
      "currentFundingVelocity():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentFundingVelocity(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentFundingVelocity",
      "currentFundingVelocity():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  delayedOrders(
    account: Address
  ): PerpsV2MarketProxyable__delayedOrdersResultValue0Struct {
    let result = super.call(
      "delayedOrders",
      "delayedOrders(address):((bool,int128,uint128,uint128,uint128,uint128,uint256,uint256,bytes32))",
      [ethereum.Value.fromAddress(account)]
    );

    return changetype<PerpsV2MarketProxyable__delayedOrdersResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_delayedOrders(
    account: Address
  ): ethereum.CallResult<
    PerpsV2MarketProxyable__delayedOrdersResultValue0Struct
  > {
    let result = super.tryCall(
      "delayedOrders",
      "delayedOrders(address):((bool,int128,uint128,uint128,uint128,uint128,uint256,uint256,bytes32))",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsV2MarketProxyable__delayedOrdersResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  fundingLastRecomputed(): BigInt {
    let result = super.call(
      "fundingLastRecomputed",
      "fundingLastRecomputed():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_fundingLastRecomputed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fundingLastRecomputed",
      "fundingLastRecomputed():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundingSequence(index: BigInt): BigInt {
    let result = super.call(
      "fundingSequence",
      "fundingSequence(uint256):(int128)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toBigInt();
  }

  try_fundingSequence(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fundingSequence",
      "fundingSequence(uint256):(int128)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundingSequenceLength(): BigInt {
    let result = super.call(
      "fundingSequenceLength",
      "fundingSequenceLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_fundingSequenceLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fundingSequenceLength",
      "fundingSequenceLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidationFee(account: Address): BigInt {
    let result = super.call(
      "liquidationFee",
      "liquidationFee(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_liquidationFee(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidationFee",
      "liquidationFee(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidationPrice(
    account: Address
  ): PerpsV2MarketProxyable__liquidationPriceResult {
    let result = super.call(
      "liquidationPrice",
      "liquidationPrice(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return new PerpsV2MarketProxyable__liquidationPriceResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_liquidationPrice(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__liquidationPriceResult> {
    let result = super.tryCall(
      "liquidationPrice",
      "liquidationPrice(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__liquidationPriceResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  marketDebt(): PerpsV2MarketProxyable__marketDebtResult {
    let result = super.call("marketDebt", "marketDebt():(uint256,bool)", []);

    return new PerpsV2MarketProxyable__marketDebtResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_marketDebt(): ethereum.CallResult<
    PerpsV2MarketProxyable__marketDebtResult
  > {
    let result = super.tryCall("marketDebt", "marketDebt():(uint256,bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__marketDebtResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  marketKey(): Bytes {
    let result = super.call("marketKey", "marketKey():(bytes32)", []);

    return result[0].toBytes();
  }

  try_marketKey(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("marketKey", "marketKey():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  marketSize(): BigInt {
    let result = super.call("marketSize", "marketSize():(uint128)", []);

    return result[0].toBigInt();
  }

  try_marketSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketSize", "marketSize():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketSizes(): PerpsV2MarketProxyable__marketSizesResult {
    let result = super.call(
      "marketSizes",
      "marketSizes():(uint256,uint256)",
      []
    );

    return new PerpsV2MarketProxyable__marketSizesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketSizes(): ethereum.CallResult<
    PerpsV2MarketProxyable__marketSizesResult
  > {
    let result = super.tryCall(
      "marketSizes",
      "marketSizes():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__marketSizesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketSkew(): BigInt {
    let result = super.call("marketSkew", "marketSkew():(int128)", []);

    return result[0].toBigInt();
  }

  try_marketSkew(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketSkew", "marketSkew():(int128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  notionalValue(account: Address): PerpsV2MarketProxyable__notionalValueResult {
    let result = super.call(
      "notionalValue",
      "notionalValue(address):(int256,bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return new PerpsV2MarketProxyable__notionalValueResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_notionalValue(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__notionalValueResult> {
    let result = super.tryCall(
      "notionalValue",
      "notionalValue(address):(int256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__notionalValueResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  orderFee(
    sizeDelta: BigInt,
    orderType: i32
  ): PerpsV2MarketProxyable__orderFeeResult {
    let result = super.call(
      "orderFee",
      "orderFee(int256,uint8):(uint256,bool)",
      [
        ethereum.Value.fromSignedBigInt(sizeDelta),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType))
      ]
    );

    return new PerpsV2MarketProxyable__orderFeeResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_orderFee(
    sizeDelta: BigInt,
    orderType: i32
  ): ethereum.CallResult<PerpsV2MarketProxyable__orderFeeResult> {
    let result = super.tryCall(
      "orderFee",
      "orderFee(int256,uint8):(uint256,bool)",
      [
        ethereum.Value.fromSignedBigInt(sizeDelta),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__orderFeeResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  positions(
    account: Address
  ): PerpsV2MarketProxyable__positionsResultValue0Struct {
    let result = super.call(
      "positions",
      "positions(address):((uint64,uint64,uint128,uint128,int128))",
      [ethereum.Value.fromAddress(account)]
    );

    return changetype<PerpsV2MarketProxyable__positionsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_positions(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__positionsResultValue0Struct> {
    let result = super.tryCall(
      "positions",
      "positions(address):((uint64,uint64,uint128,uint128,int128))",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsV2MarketProxyable__positionsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  postTradeDetails(
    sizeDelta: BigInt,
    tradePrice: BigInt,
    orderType: i32,
    sender: Address
  ): PerpsV2MarketProxyable__postTradeDetailsResult {
    let result = super.call(
      "postTradeDetails",
      "postTradeDetails(int256,uint256,uint8,address):(uint256,int256,uint256,uint256,uint256,uint8)",
      [
        ethereum.Value.fromSignedBigInt(sizeDelta),
        ethereum.Value.fromUnsignedBigInt(tradePrice),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType)),
        ethereum.Value.fromAddress(sender)
      ]
    );

    return new PerpsV2MarketProxyable__postTradeDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32()
    );
  }

  try_postTradeDetails(
    sizeDelta: BigInt,
    tradePrice: BigInt,
    orderType: i32,
    sender: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__postTradeDetailsResult> {
    let result = super.tryCall(
      "postTradeDetails",
      "postTradeDetails(int256,uint256,uint8,address):(uint256,int256,uint256,uint256,uint256,uint8)",
      [
        ethereum.Value.fromSignedBigInt(sizeDelta),
        ethereum.Value.fromUnsignedBigInt(tradePrice),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(orderType)),
        ethereum.Value.fromAddress(sender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__postTradeDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32()
      )
    );
  }

  profitLoss(account: Address): PerpsV2MarketProxyable__profitLossResult {
    let result = super.call("profitLoss", "profitLoss(address):(int256,bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return new PerpsV2MarketProxyable__profitLossResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_profitLoss(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__profitLossResult> {
    let result = super.tryCall(
      "profitLoss",
      "profitLoss(address):(int256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__profitLossResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  recomputeFunding(): BigInt {
    let result = super.call(
      "recomputeFunding",
      "recomputeFunding():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_recomputeFunding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "recomputeFunding",
      "recomputeFunding():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  remainingMargin(
    account: Address
  ): PerpsV2MarketProxyable__remainingMarginResult {
    let result = super.call(
      "remainingMargin",
      "remainingMargin(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return new PerpsV2MarketProxyable__remainingMarginResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_remainingMargin(
    account: Address
  ): ethereum.CallResult<PerpsV2MarketProxyable__remainingMarginResult> {
    let result = super.tryCall(
      "remainingMargin",
      "remainingMargin(address):(uint256,bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__remainingMarginResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  unrecordedFunding(): PerpsV2MarketProxyable__unrecordedFundingResult {
    let result = super.call(
      "unrecordedFunding",
      "unrecordedFunding():(int256,bool)",
      []
    );

    return new PerpsV2MarketProxyable__unrecordedFundingResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_unrecordedFunding(): ethereum.CallResult<
    PerpsV2MarketProxyable__unrecordedFundingResult
  > {
    let result = super.tryCall(
      "unrecordedFunding",
      "unrecordedFunding():(int256,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsV2MarketProxyable__unrecordedFundingResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }
}

export class CancelDelayedOrderCall extends ethereum.Call {
  get inputs(): CancelDelayedOrderCall__Inputs {
    return new CancelDelayedOrderCall__Inputs(this);
  }

  get outputs(): CancelDelayedOrderCall__Outputs {
    return new CancelDelayedOrderCall__Outputs(this);
  }
}

export class CancelDelayedOrderCall__Inputs {
  _call: CancelDelayedOrderCall;

  constructor(call: CancelDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelDelayedOrderCall__Outputs {
  _call: CancelDelayedOrderCall;

  constructor(call: CancelDelayedOrderCall) {
    this._call = call;
  }
}

export class CancelOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): CancelOffchainDelayedOrderCall__Inputs {
    return new CancelOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): CancelOffchainDelayedOrderCall__Outputs {
    return new CancelOffchainDelayedOrderCall__Outputs(this);
  }
}

export class CancelOffchainDelayedOrderCall__Inputs {
  _call: CancelOffchainDelayedOrderCall;

  constructor(call: CancelOffchainDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelOffchainDelayedOrderCall__Outputs {
  _call: CancelOffchainDelayedOrderCall;

  constructor(call: CancelOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class ClosePositionCall extends ethereum.Call {
  get inputs(): ClosePositionCall__Inputs {
    return new ClosePositionCall__Inputs(this);
  }

  get outputs(): ClosePositionCall__Outputs {
    return new ClosePositionCall__Outputs(this);
  }
}

export class ClosePositionCall__Inputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClosePositionCall__Outputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }
}

export class ClosePositionWithTrackingCall extends ethereum.Call {
  get inputs(): ClosePositionWithTrackingCall__Inputs {
    return new ClosePositionWithTrackingCall__Inputs(this);
  }

  get outputs(): ClosePositionWithTrackingCall__Outputs {
    return new ClosePositionWithTrackingCall__Outputs(this);
  }
}

export class ClosePositionWithTrackingCall__Inputs {
  _call: ClosePositionWithTrackingCall;

  constructor(call: ClosePositionWithTrackingCall) {
    this._call = call;
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ClosePositionWithTrackingCall__Outputs {
  _call: ClosePositionWithTrackingCall;

  constructor(call: ClosePositionWithTrackingCall) {
    this._call = call;
  }
}

export class ExecuteDelayedOrderCall extends ethereum.Call {
  get inputs(): ExecuteDelayedOrderCall__Inputs {
    return new ExecuteDelayedOrderCall__Inputs(this);
  }

  get outputs(): ExecuteDelayedOrderCall__Outputs {
    return new ExecuteDelayedOrderCall__Outputs(this);
  }
}

export class ExecuteDelayedOrderCall__Inputs {
  _call: ExecuteDelayedOrderCall;

  constructor(call: ExecuteDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExecuteDelayedOrderCall__Outputs {
  _call: ExecuteDelayedOrderCall;

  constructor(call: ExecuteDelayedOrderCall) {
    this._call = call;
  }
}

export class ExecuteOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): ExecuteOffchainDelayedOrderCall__Inputs {
    return new ExecuteOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): ExecuteOffchainDelayedOrderCall__Outputs {
    return new ExecuteOffchainDelayedOrderCall__Outputs(this);
  }
}

export class ExecuteOffchainDelayedOrderCall__Inputs {
  _call: ExecuteOffchainDelayedOrderCall;

  constructor(call: ExecuteOffchainDelayedOrderCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get priceUpdateData(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class ExecuteOffchainDelayedOrderCall__Outputs {
  _call: ExecuteOffchainDelayedOrderCall;

  constructor(call: ExecuteOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class LiquidatePositionCall extends ethereum.Call {
  get inputs(): LiquidatePositionCall__Inputs {
    return new LiquidatePositionCall__Inputs(this);
  }

  get outputs(): LiquidatePositionCall__Outputs {
    return new LiquidatePositionCall__Outputs(this);
  }
}

export class LiquidatePositionCall__Inputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LiquidatePositionCall__Outputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }
}

export class ModifyPositionCall extends ethereum.Call {
  get inputs(): ModifyPositionCall__Inputs {
    return new ModifyPositionCall__Inputs(this);
  }

  get outputs(): ModifyPositionCall__Outputs {
    return new ModifyPositionCall__Outputs(this);
  }
}

export class ModifyPositionCall__Inputs {
  _call: ModifyPositionCall;

  constructor(call: ModifyPositionCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyPositionCall__Outputs {
  _call: ModifyPositionCall;

  constructor(call: ModifyPositionCall) {
    this._call = call;
  }
}

export class ModifyPositionWithTrackingCall extends ethereum.Call {
  get inputs(): ModifyPositionWithTrackingCall__Inputs {
    return new ModifyPositionWithTrackingCall__Inputs(this);
  }

  get outputs(): ModifyPositionWithTrackingCall__Outputs {
    return new ModifyPositionWithTrackingCall__Outputs(this);
  }
}

export class ModifyPositionWithTrackingCall__Inputs {
  _call: ModifyPositionWithTrackingCall;

  constructor(call: ModifyPositionWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ModifyPositionWithTrackingCall__Outputs {
  _call: ModifyPositionWithTrackingCall;

  constructor(call: ModifyPositionWithTrackingCall) {
    this._call = call;
  }
}

export class RecomputeFundingCall extends ethereum.Call {
  get inputs(): RecomputeFundingCall__Inputs {
    return new RecomputeFundingCall__Inputs(this);
  }

  get outputs(): RecomputeFundingCall__Outputs {
    return new RecomputeFundingCall__Outputs(this);
  }
}

export class RecomputeFundingCall__Inputs {
  _call: RecomputeFundingCall;

  constructor(call: RecomputeFundingCall) {
    this._call = call;
  }
}

export class RecomputeFundingCall__Outputs {
  _call: RecomputeFundingCall;

  constructor(call: RecomputeFundingCall) {
    this._call = call;
  }

  get lastIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SubmitDelayedOrderCall extends ethereum.Call {
  get inputs(): SubmitDelayedOrderCall__Inputs {
    return new SubmitDelayedOrderCall__Inputs(this);
  }

  get outputs(): SubmitDelayedOrderCall__Outputs {
    return new SubmitDelayedOrderCall__Outputs(this);
  }
}

export class SubmitDelayedOrderCall__Inputs {
  _call: SubmitDelayedOrderCall;

  constructor(call: SubmitDelayedOrderCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get desiredTimeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SubmitDelayedOrderCall__Outputs {
  _call: SubmitDelayedOrderCall;

  constructor(call: SubmitDelayedOrderCall) {
    this._call = call;
  }
}

export class SubmitDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitDelayedOrderWithTrackingCall__Inputs {
    return new SubmitDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitDelayedOrderWithTrackingCall__Outputs {
    return new SubmitDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitDelayedOrderWithTrackingCall;

  constructor(call: SubmitDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get desiredTimeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SubmitDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitDelayedOrderWithTrackingCall;

  constructor(call: SubmitDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class SubmitOffchainDelayedOrderCall extends ethereum.Call {
  get inputs(): SubmitOffchainDelayedOrderCall__Inputs {
    return new SubmitOffchainDelayedOrderCall__Inputs(this);
  }

  get outputs(): SubmitOffchainDelayedOrderCall__Outputs {
    return new SubmitOffchainDelayedOrderCall__Outputs(this);
  }
}

export class SubmitOffchainDelayedOrderCall__Inputs {
  _call: SubmitOffchainDelayedOrderCall;

  constructor(call: SubmitOffchainDelayedOrderCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubmitOffchainDelayedOrderCall__Outputs {
  _call: SubmitOffchainDelayedOrderCall;

  constructor(call: SubmitOffchainDelayedOrderCall) {
    this._call = call;
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall extends ethereum.Call {
  get inputs(): SubmitOffchainDelayedOrderWithTrackingCall__Inputs {
    return new SubmitOffchainDelayedOrderWithTrackingCall__Inputs(this);
  }

  get outputs(): SubmitOffchainDelayedOrderWithTrackingCall__Outputs {
    return new SubmitOffchainDelayedOrderWithTrackingCall__Outputs(this);
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall__Inputs {
  _call: SubmitOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }

  get sizeDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceImpactDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitOffchainDelayedOrderWithTrackingCall__Outputs {
  _call: SubmitOffchainDelayedOrderWithTrackingCall;

  constructor(call: SubmitOffchainDelayedOrderWithTrackingCall) {
    this._call = call;
  }
}

export class TransferMarginCall extends ethereum.Call {
  get inputs(): TransferMarginCall__Inputs {
    return new TransferMarginCall__Inputs(this);
  }

  get outputs(): TransferMarginCall__Outputs {
    return new TransferMarginCall__Outputs(this);
  }
}

export class TransferMarginCall__Inputs {
  _call: TransferMarginCall;

  constructor(call: TransferMarginCall) {
    this._call = call;
  }

  get marginDelta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TransferMarginCall__Outputs {
  _call: TransferMarginCall;

  constructor(call: TransferMarginCall) {
    this._call = call;
  }
}

export class WithdrawAllMarginCall extends ethereum.Call {
  get inputs(): WithdrawAllMarginCall__Inputs {
    return new WithdrawAllMarginCall__Inputs(this);
  }

  get outputs(): WithdrawAllMarginCall__Outputs {
    return new WithdrawAllMarginCall__Outputs(this);
  }
}

export class WithdrawAllMarginCall__Inputs {
  _call: WithdrawAllMarginCall;

  constructor(call: WithdrawAllMarginCall) {
    this._call = call;
  }
}

export class WithdrawAllMarginCall__Outputs {
  _call: WithdrawAllMarginCall;

  constructor(call: WithdrawAllMarginCall) {
    this._call = call;
  }
}
